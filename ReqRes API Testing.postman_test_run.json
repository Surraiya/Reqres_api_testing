{
	"id": "0e256385-8bb4-4e98-855c-0b0567e14b30",
	"name": "ReqRes API Testing",
	"timestamp": "2024-03-08T21:36:52.472Z",
	"collection_id": "27253252-109f3302-56c8-4a52-9f78-fdb897ec6826",
	"folder_id": 0,
	"environment_id": "27253252-0a1e07ef-8780-41a1-9a73-ed8e98c6b615",
	"totalPass": 655,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2024-03-08T21:36:09.024Z",
	"totalFail": 441,
	"results": [
		{
			"id": "cc5742ef-0f63-436d-9947-ab99001bf6f8",
			"name": "Get All Users with Default Parameters",
			"url": "https://reqres.in/api/users",
			"time": 139,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Page number is correct: 1": true,
				"Number of users per page is correct: 6": true,
				"Total number of users is correct: 12": true,
				"Total number of pages is correct: 2": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct: 1": {
					"pass": 1,
					"fail": 0
				},
				"Number of users per page is correct: 6": {
					"pass": 1,
					"fail": 0
				},
				"Total number of users is correct: 12": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct: 2": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				139
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Page number is correct: 1": true,
					"Number of users per page is correct: 6": true,
					"Total number of users is correct: 12": true,
					"Total number of pages is correct: 2": true
				}
			]
		},
		{
			"id": "c9c5f13d-6697-41cc-9bed-dc66cc466db4",
			"name": "Get All Users with empty Id",
			"url": "https://reqres.in/api/users/",
			"time": 110,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Page number is correct": true,
				"Number of users per page is correct": true,
				"Total number of users is correct": true,
				"Total number of pages is correct": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct": {
					"pass": 1,
					"fail": 0
				},
				"Number of users per page is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of users is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				110
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Page number is correct": true,
					"Number of users per page is correct": true,
					"Total number of users is correct": true,
					"Total number of pages is correct": true
				}
			]
		},
		{
			"id": "99f58ac2-607b-4403-907d-61da3242a86f",
			"name": "Get All Users for all users on a Page",
			"url": "https://reqres.in/api/users?per_page=12",
			"time": 101,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Length of 'data' array is 12": true,
				"Page number is correct: 1": true,
				"Number of users per page is correct: 12": true,
				"Total number of users is correct: 12": true,
				"Total number of pages is correct: 1": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Length of 'data' array is 12": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct: 1": {
					"pass": 1,
					"fail": 0
				},
				"Number of users per page is correct: 12": {
					"pass": 1,
					"fail": 0
				},
				"Total number of users is correct: 12": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct: 1": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Length of 'data' array is 12": true,
					"Page number is correct: 1": true,
					"Number of users per page is correct: 12": true,
					"Total number of users is correct: 12": true,
					"Total number of pages is correct: 1": true
				}
			]
		},
		{
			"id": "07c242d9-0e72-49cd-9085-e5b0ca7692b2",
			"name": "Get All Users for the First Page",
			"url": "https://reqres.in/api/users?page=1",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Page number is correct: 1": true,
				"Number of users per page is correct: 6": true,
				"Total number of users is correct: 12": true,
				"Total number of pages is correct: 2": true,
				"Verify that the information of each user matches the information of users 1 to 6 from the allUsers environment variable.": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct: 1": {
					"pass": 1,
					"fail": 0
				},
				"Number of users per page is correct: 6": {
					"pass": 1,
					"fail": 0
				},
				"Total number of users is correct: 12": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct: 2": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the information of each user matches the information of users 1 to 6 from the allUsers environment variable.": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Page number is correct: 1": true,
					"Number of users per page is correct: 6": true,
					"Total number of users is correct: 12": true,
					"Total number of pages is correct: 2": true,
					"Verify that the information of each user matches the information of users 1 to 6 from the allUsers environment variable.": true
				}
			]
		},
		{
			"id": "23893d12-c994-4ab9-852b-18d4f53dca8b",
			"name": "Get All Users for the Last Page",
			"url": "https://reqres.in/api/users?page=2",
			"time": 53,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Page number is correct": true,
				"Number of users per page is correct": true,
				"Total number of users is correct": true,
				"Total number of pages is correct": true,
				"Verify that the information of each user matches the information of users 6 to 12 from the allUsers environment variable.": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct": {
					"pass": 1,
					"fail": 0
				},
				"Number of users per page is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of users is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the information of each user matches the information of users 6 to 12 from the allUsers environment variable.": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				53
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Page number is correct": true,
					"Number of users per page is correct": true,
					"Total number of users is correct": true,
					"Total number of pages is correct": true,
					"Verify that the information of each user matches the information of users 6 to 12 from the allUsers environment variable.": true
				}
			]
		},
		{
			"id": "76029224-17dd-4881-b511-1bdcd8536b53",
			"name": "Get All Users with empty page number",
			"url": "https://reqres.in/api/users?page",
			"time": 102,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Page number is 1 when no page number is given": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is 1 when no page number is given": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Page number is 1 when no page number is given": true
				}
			]
		},
		{
			"id": "a7f4f4c5-e1c7-4467-a8c8-d2bb87dfd7d6",
			"name": "Get All Users with valid page and valid per_page",
			"url": "https://reqres.in/api/users?page=1&per_page=4",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Verify per_page is 4": true,
				"Verify total_pages is 3": true,
				"Verify total number of data is 4": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Verify per_page is 4": {
					"pass": 1,
					"fail": 0
				},
				"Verify total_pages is 3": {
					"pass": 1,
					"fail": 0
				},
				"Verify total number of data is 4": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Verify per_page is 4": true,
					"Verify total_pages is 3": true,
					"Verify total number of data is 4": true
				}
			]
		},
		{
			"id": "4a745aa2-f8bc-4f34-911f-bd4f97bf599a",
			"name": "Get All Users for a single User on a Page",
			"url": "https://reqres.in/api/users?per_page=1",
			"time": 102,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of users": true,
				"For each user, User Schema is valid": true,
				"Length of 'data' array is 1": true,
				"Page number is correct: 1": true,
				"Number of users per page is correct: 1": true,
				"Total number of users is correct: 12": true,
				"Total number of pages is correct: 12": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of users": {
					"pass": 1,
					"fail": 0
				},
				"For each user, User Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Length of 'data' array is 1": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct: 1": {
					"pass": 1,
					"fail": 0
				},
				"Number of users per page is correct: 1": {
					"pass": 1,
					"fail": 0
				},
				"Total number of users is correct: 12": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct: 12": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of users": true,
					"For each user, User Schema is valid": true,
					"Length of 'data' array is 1": true,
					"Page number is correct: 1": true,
					"Number of users per page is correct: 1": true,
					"Total number of users is correct: 12": true,
					"Total number of pages is correct: 12": true
				}
			]
		},
		{
			"id": "123d0a58-c111-468b-8d12-807ddaf71cf8",
			"name": "Get All Users for a page beyond total pages",
			"url": "https://reqres.in/api/users?page=3",
			"time": 109,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is 404": false,
				"Response body contains 'Page not found' error message": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 404": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains 'Page not found' error message": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				109
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is 404": false,
					"Response body contains 'Page not found' error message": false
				}
			]
		},
		{
			"id": "a25065f5-cd33-42f1-802b-45c326b64277",
			"name": "Get All Users with negative page number",
			"url": "https://reqres.in/api/users?page=-3",
			"time": 109,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is a client error (400)": false,
				"Error Status is : Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Error Status is : Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				109
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is a client error (400)": false,
					"Error Status is : Bad Request": false
				}
			]
		},
		{
			"id": "caa0de85-a46a-49b8-9ae8-ba2520772417",
			"name": "Get All Users with negative per_page number",
			"url": "https://reqres.in/api/users?per_page=-3",
			"time": 107,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"For retrieving page where per_page is negative, response status code should be 400": false,
				"For retrieving page where per_page is negative, response phrase should be: Bad Request": false,
				"For retrieving page where per_page is negative, response should contain: per_page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where per_page is negative, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where per_page is negative, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where per_page is negative, response should contain: per_page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				107
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"For retrieving page where per_page is negative, response status code should be 400": false,
					"For retrieving page where per_page is negative, response phrase should be: Bad Request": false,
					"For retrieving page where per_page is negative, response should contain: per_page is invalid": false
				}
			]
		},
		{
			"id": "649fc44c-97e1-4c9d-b471-194186065971",
			"name": "Get All Users for large page number",
			"url": "https://reqres.in/api/users?page=123456456786543234",
			"time": 110,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is a client error (400)": false,
				"Error Status is : Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Error Status is : Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				110
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is a client error (400)": false,
					"Error Status is : Bad Request": false
				}
			]
		},
		{
			"id": "b2e7b9bc-fa0b-4af2-a67a-a267796f97b9",
			"name": "Get All Users with Non-Integer Page Number (String)",
			"url": "https://reqres.in/api/users?page=\"abc\"",
			"time": 109,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"For retrieving page with non-integer page number, response status code should be 400": false,
				"For retrieving page with non-integer number, response phrase should be: Bad Request": false,
				"For retrieving page where page is non-integer, response should contain: page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with non-integer page number, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with non-integer number, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where page is non-integer, response should contain: page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				109
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"For retrieving page with non-integer page number, response status code should be 400": false,
					"For retrieving page with non-integer number, response phrase should be: Bad Request": false,
					"For retrieving page where page is non-integer, response should contain: page is invalid": false
				}
			]
		},
		{
			"id": "fb9a060d-debc-4cbd-8425-639d8a88931e",
			"name": "Get All Userswith Non-Integer per_page Number (String)",
			"url": "https://reqres.in/api/users?per_page=\"abc\"",
			"time": 100,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"For retrieving page with non-integer per_page number, response status code should be 400": false,
				"For retrieving page with non-integer per_page number, response phrase should be: Bad Request": false,
				"For retrieving page where per_page is non-integer, response should contain: per_page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with non-integer per_page number, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with non-integer per_page number, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where per_page is non-integer, response should contain: per_page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"For retrieving page with non-integer per_page number, response status code should be 400": false,
					"For retrieving page with non-integer per_page number, response phrase should be: Bad Request": false,
					"For retrieving page where per_page is non-integer, response should contain: per_page is invalid": false
				}
			]
		},
		{
			"id": "28907bd9-d1a5-4cb7-a176-27ec1bd536b6",
			"name": "Get All Users with Exceedingly Large Page Number",
			"url": "https://reqres.in/api/users?page=1265436789",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"For retrieving page with exceedingly large page number, response status code should be 404": false,
				"For retrieving page with exceedingly large page number, response phrase should be: Page Not Found": false,
				"For retrieving page with exceedingly large page number, response should contain: []": true,
				"For retrieving page with exceedingly large page number, response should contain: requested page does not exist": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large page number, response status code should be 404": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large page number, response phrase should be: Page Not Found": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large page number, response should contain: []": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page with exceedingly large page number, response should contain: requested page does not exist": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"For retrieving page with exceedingly large page number, response status code should be 404": false,
					"For retrieving page with exceedingly large page number, response phrase should be: Page Not Found": false,
					"For retrieving page with exceedingly large page number, response should contain: []": true,
					"For retrieving page with exceedingly large page number, response should contain: requested page does not exist": false
				}
			]
		},
		{
			"id": "f76f8bbe-4036-4c8c-b263-15f92d49717b",
			"name": "Get All Users with Exceedingly Large per_page Number",
			"url": "https://reqres.in/api/users?per_page=1265436789",
			"time": 104,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"For retrieving page with exceedingly large per_page number, response status code should be 404": false,
				"For retrieving page with exceedingly large per_page number, response phrase should be: Page Not Found": false,
				"For retrieving page with exceedingly large per_page number, response should contain: per_page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large per_page number, response status code should be 404": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large per_page number, response phrase should be: Page Not Found": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large per_page number, response should contain: per_page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				104
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"For retrieving page with exceedingly large per_page number, response status code should be 404": false,
					"For retrieving page with exceedingly large per_page number, response phrase should be: Page Not Found": false,
					"For retrieving page with exceedingly large per_page number, response should contain: per_page is invalid": false
				}
			]
		},
		{
			"id": "7a95e409-a3fb-43ed-b2b5-2ee946780426",
			"name": "Get All Users with unknown query params",
			"url": "https://reqres.in/api/users?job=\"something\"&age=12",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"For retrieving page where query params are unknown, response status code should be 400": false,
				"For retrieving page where query params are unknown, response phrase should be: Bad Request": false,
				"For retrieving page where query params are unknown, response should contain: unknown query params": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where query params are unknown, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where query params are unknown, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where query params are unknown, response should contain: unknown query params": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"For retrieving page where query params are unknown, response status code should be 400": false,
					"For retrieving page where query params are unknown, response phrase should be: Bad Request": false,
					"For retrieving page where query params are unknown, response should contain: unknown query params": false
				}
			]
		},
		{
			"id": "40d4c687-ab2d-410d-8bcc-3862f65905c4",
			"name": "Get All Users with valid page and per_page but Invalid POST method",
			"url": "https://reqres.in/api/users?page=1&per_page=6",
			"time": 111,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"For invalid method, response status code should be 405": false,
				"For invalid method, response phrase should be: Method Not Allowed": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response status code should be 405": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response phrase should be: Method Not Allowed": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				111
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"For invalid method, response status code should be 405": false,
					"For invalid method, response phrase should be: Method Not Allowed": false
				}
			]
		},
		{
			"id": "e8d5f93b-5fb4-4be0-b3b7-34094397dd85",
			"name": "Get user with minimum valid id",
			"url": "https://reqres.in/api/users/1",
			"time": 43,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains expected properties for the user": true,
				"User ID is included in the list of all users": true,
				"User's details matches with the existing user obtained from the /api/users/{id} endpoint": true,
				"Email is a non-empty string": false,
				"First name and last name are non-empty strings": false,
				"Avatar is a valid URL or null": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties for the user": {
					"pass": 1,
					"fail": 0
				},
				"User ID is included in the list of all users": {
					"pass": 1,
					"fail": 0
				},
				"User's details matches with the existing user obtained from the /api/users/{id} endpoint": {
					"pass": 1,
					"fail": 0
				},
				"Email is a non-empty string": {
					"pass": 0,
					"fail": 1
				},
				"First name and last name are non-empty strings": {
					"pass": 0,
					"fail": 1
				},
				"Avatar is a valid URL or null": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				43
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains expected properties for the user": true,
					"User ID is included in the list of all users": true,
					"User's details matches with the existing user obtained from the /api/users/{id} endpoint": true,
					"Email is a non-empty string": false,
					"First name and last name are non-empty strings": false,
					"Avatar is a valid URL or null": true
				}
			]
		},
		{
			"id": "8b1de41e-1026-431f-b499-b96cf76cd8fe",
			"name": "Get user with maximum valid id",
			"url": "https://reqres.in/api/users/12",
			"time": 101,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains expected properties for the user": true,
				"User ID is included in the list of all users": true,
				"User's details matches with the existing user obtained from the /api/users/{id} endpoint": true,
				"Email is a non-empty string": false,
				"First name and last name are non-empty strings": false,
				"Avatar is a valid URL or null": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties for the user": {
					"pass": 1,
					"fail": 0
				},
				"User ID is included in the list of all users": {
					"pass": 1,
					"fail": 0
				},
				"User's details matches with the existing user obtained from the /api/users/{id} endpoint": {
					"pass": 1,
					"fail": 0
				},
				"Email is a non-empty string": {
					"pass": 0,
					"fail": 1
				},
				"First name and last name are non-empty strings": {
					"pass": 0,
					"fail": 1
				},
				"Avatar is a valid URL or null": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains expected properties for the user": true,
					"User ID is included in the list of all users": true,
					"User's details matches with the existing user obtained from the /api/users/{id} endpoint": true,
					"Email is a non-empty string": false,
					"First name and last name are non-empty strings": false,
					"Avatar is a valid URL or null": true
				}
			]
		},
		{
			"id": "8a67b042-d94f-40fd-b92f-ff5e84775d64",
			"name": "Get User with nonexistent id (beyond maximum)",
			"url": "https://reqres.in/api/users/13",
			"time": 103,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is 404": true
				}
			]
		},
		{
			"id": "9d8b4a62-ceda-4b92-93b5-c84d78b33928",
			"name": "Get User with nonexistent id (less than minimum)",
			"url": "https://reqres.in/api/users/0",
			"time": 100,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is 404": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is 404": true
				}
			]
		},
		{
			"id": "3812bf3c-070b-4023-b361-fd0d796b7e25",
			"name": "Get User with negative id",
			"url": "https://reqres.in/api/users/-2",
			"time": 109,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is 400 (Bad Request)": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 400 (Bad Request)": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				109
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is 400 (Bad Request)": false
				}
			]
		},
		{
			"id": "ed0bfffe-e664-4e5a-b7ca-29e0967f8fd5",
			"name": "Get User with id (string format)",
			"url": "https://reqres.in/api/users/abc",
			"time": 153,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is 400 or 422": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 400 or 422": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				153
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is 400 or 422": false
				}
			]
		},
		{
			"id": "8581db14-2bde-4ad4-961e-359635722e77",
			"name": "Get User with id (float)",
			"url": "https://reqres.in/api/users/5.6",
			"time": 97,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is 400 or 422": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 400 or 422": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is 400 or 422": false
				}
			]
		},
		{
			"id": "a0dc7920-665c-44a2-960b-a717d527d3a2",
			"name": "Create User with all valid parameters",
			"url": "https://reqres.in/api/users",
			"time": 104,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Status code is 201": true,
				"Status code name has string": true,
				"For successfully user creation the response body contains: id": true,
				"For successfully user creation the response body contains: first_name": true,
				"For successfully user creation the response body contains: last_name": true,
				"For successfully user creation the response body contains: email": true,
				"For successfully user creation the response body contains: createdAt": true,
				"Response contains expected 'createdAt' timestamp for the newly created user": true,
				"First name and last name are strings": true,
				"Avatar is either a valid URL or empty string": true,
				"Email is a non-empty string": true,
				"Confirm user creation by retrieving the created user using GET req: Response status is 200": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"Status code name has string": {
					"pass": 1,
					"fail": 0
				},
				"For successfully user creation the response body contains: id": {
					"pass": 1,
					"fail": 0
				},
				"For successfully user creation the response body contains: first_name": {
					"pass": 1,
					"fail": 0
				},
				"For successfully user creation the response body contains: last_name": {
					"pass": 1,
					"fail": 0
				},
				"For successfully user creation the response body contains: email": {
					"pass": 1,
					"fail": 0
				},
				"For successfully user creation the response body contains: createdAt": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected 'createdAt' timestamp for the newly created user": {
					"pass": 1,
					"fail": 0
				},
				"First name and last name are strings": {
					"pass": 1,
					"fail": 0
				},
				"Avatar is either a valid URL or empty string": {
					"pass": 1,
					"fail": 0
				},
				"Email is a non-empty string": {
					"pass": 1,
					"fail": 0
				},
				"Confirm user creation by retrieving the created user using GET req: Response status is 200": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				104
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Status code is 201": true,
					"Status code name has string": true,
					"For successfully user creation the response body contains: id": true,
					"For successfully user creation the response body contains: first_name": true,
					"For successfully user creation the response body contains: last_name": true,
					"For successfully user creation the response body contains: email": true,
					"For successfully user creation the response body contains: createdAt": true,
					"Response contains expected 'createdAt' timestamp for the newly created user": true,
					"First name and last name are strings": true,
					"Avatar is either a valid URL or empty string": true,
					"Email is a non-empty string": true,
					"Confirm user creation by retrieving the created user using GET req: Response status is 200": false
				}
			]
		},
		{
			"id": "f186c0a9-7e03-4c3f-8c6b-4e24f0b84d8a",
			"name": "Create User with valid email",
			"url": "https://reqres.in/api/users/56",
			"time": 112,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Status code is 201": false,
				"Status code name has string": false,
				"For successfully user creation the response body contains: id": false,
				"For successfully user creation the response body contains: first_name": false,
				"For successfully user creation the response body contains: last_name": false,
				"For successfully user creation the response body contains: email": false,
				"For successfully user creation the response body contains: createdAt": false,
				"Response contains expected 'createdAt' timestamp for the newly created user": false,
				"First name and last name are strings": false,
				"Avatar is either a valid URL or empty string": false,
				"Email is a non-empty string": false,
				"Confirm user creation by retrieving the created user using GET req: Response status is 200": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 201": {
					"pass": 0,
					"fail": 1
				},
				"Status code name has string": {
					"pass": 0,
					"fail": 1
				},
				"For successfully user creation the response body contains: id": {
					"pass": 0,
					"fail": 1
				},
				"For successfully user creation the response body contains: first_name": {
					"pass": 0,
					"fail": 1
				},
				"For successfully user creation the response body contains: last_name": {
					"pass": 0,
					"fail": 1
				},
				"For successfully user creation the response body contains: email": {
					"pass": 0,
					"fail": 1
				},
				"For successfully user creation the response body contains: createdAt": {
					"pass": 0,
					"fail": 1
				},
				"Response contains expected 'createdAt' timestamp for the newly created user": {
					"pass": 0,
					"fail": 1
				},
				"First name and last name are strings": {
					"pass": 0,
					"fail": 1
				},
				"Avatar is either a valid URL or empty string": {
					"pass": 0,
					"fail": 1
				},
				"Email is a non-empty string": {
					"pass": 0,
					"fail": 1
				},
				"Confirm user creation by retrieving the created user using GET req: Response status is 200": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				112
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Status code is 201": false,
					"Status code name has string": false,
					"For successfully user creation the response body contains: id": false,
					"For successfully user creation the response body contains: first_name": false,
					"For successfully user creation the response body contains: last_name": false,
					"For successfully user creation the response body contains: email": false,
					"For successfully user creation the response body contains: createdAt": false,
					"Response contains expected 'createdAt' timestamp for the newly created user": false,
					"First name and last name are strings": false,
					"Avatar is either a valid URL or empty string": false,
					"Email is a non-empty string": false,
					"Confirm user creation by retrieving the created user using GET req: Response status is 200": false
				}
			]
		},
		{
			"id": "f0ced61a-65de-4f94-b86c-af52d78e6f7a",
			"name": "Create user with all empty body",
			"url": "https://reqres.in/api/users",
			"time": 97,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false
				}
			]
		},
		{
			"id": "a19c49d1-e7b4-4255-aa6a-95fec3120a74",
			"name": "Create an existing user",
			"url": "https://reqres.in/api/users",
			"time": 99,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false
				}
			]
		},
		{
			"id": "f6425523-cef5-4db2-8b60-b7562edb4109",
			"name": "Create user with invalid email",
			"url": "https://reqres.in/api/users",
			"time": 89,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For invalid email, response body contains: emailIsInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For invalid email, response body contains: emailIsInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				89
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For invalid email, response body contains: emailIsInvalid": false
				}
			]
		},
		{
			"id": "e147b5e1-961f-4117-81ba-47893e5b23ac",
			"name": "Create user with empty email",
			"url": "https://reqres.in/api/users",
			"time": 100,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For empty email, response body contains: emailIsMissing": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For empty email, response body contains: emailIsMissing": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For empty email, response body contains: emailIsMissing": false
				}
			]
		},
		{
			"id": "64a0e555-cfc6-46dd-88b2-1bb97a4ec57e",
			"name": "Create user with invalid email format",
			"url": "https://reqres.in/api/users",
			"time": 92,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For invalid email format, response body contains: emailFormatIsInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For invalid email format, response body contains: emailFormatIsInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				92
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For invalid email format, response body contains: emailFormatIsInvalid": false
				}
			]
		},
		{
			"id": "6feefd59-3a82-4efe-bbd8-457f2311bcc6",
			"name": "Create user with empty request body",
			"url": "https://reqres.in/api/users",
			"time": 90,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For empty request body, response body contains: requestBodyCannotBeEmpty": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For empty request body, response body contains: requestBodyCannotBeEmpty": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				90
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For empty request body, response body contains: requestBodyCannotBeEmpty": false
				}
			]
		},
		{
			"id": "c0781630-6fdc-494a-b1cf-f5bec1add6c2",
			"name": "Create user without email",
			"url": "https://reqres.in/api/users",
			"time": 110,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For empty email, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For empty email, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				110
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For empty email, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "9449d617-5a63-45be-b3a0-bde1dc23de19",
			"name": "Create user with an invalid field",
			"url": "https://reqres.in/api/users",
			"time": 94,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with invalid field, response body contains: invalidField": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with invalid field, response body contains: invalidField": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with invalid field, response body contains: invalidField": false
				}
			]
		},
		{
			"id": "a6fbd308-f86b-481a-8c9b-5d32df5bfcc0",
			"name": "Create user with only firstName",
			"url": "https://reqres.in/api/users",
			"time": 94,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with only firstName, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with only firstName, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with only firstName, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "7225e42d-ebd1-4635-96d9-e0926d30da55",
			"name": "Create user with only lastName",
			"url": "https://reqres.in/api/users",
			"time": 95,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with only lastName, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with only lastName, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with only lastName, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "722812f5-1969-446d-ada9-97b5ecb42df4",
			"name": "Create user with large string in firstname",
			"url": "https://reqres.in/api/users",
			"time": 96,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with large string in firstName, response body contains: emailIsRequired": false,
				"For user with large string in firstName, response body contains: firstnameInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with large string in firstName, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				},
				"For user with large string in firstName, response body contains: firstnameInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with large string in firstName, response body contains: emailIsRequired": false,
					"For user with large string in firstName, response body contains: firstnameInvalid": false
				}
			]
		},
		{
			"id": "03ceb3c1-99c9-4b36-8dab-002459d0187e",
			"name": "Create user with large string in lastname",
			"url": "https://reqres.in/api/users",
			"time": 93,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with large string in last name, response body contains: emailIsRequired": false,
				"For user with large string in lastName, response body contains: firstnameInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with large string in last name, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				},
				"For user with large string in lastName, response body contains: firstnameInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with large string in last name, response body contains: emailIsRequired": false,
					"For user with large string in lastName, response body contains: firstnameInvalid": false
				}
			]
		},
		{
			"id": "8abc4193-37b9-4f61-8cce-487263eea56c",
			"name": "Create user with digit as input in first name",
			"url": "https://reqres.in/api/users",
			"time": 100,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with digit as input in first name, response body contains: firstnameInvalid": false,
				"For user with digit as input in first name, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with digit as input in first name, response body contains: firstnameInvalid": {
					"pass": 0,
					"fail": 1
				},
				"For user with digit as input in first name, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with digit as input in first name, response body contains: firstnameInvalid": false,
					"For user with digit as input in first name, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "90e3f319-1f81-4e9a-8c96-a01e0641ec86",
			"name": "Create user with digit as input in last name",
			"url": "https://reqres.in/api/users",
			"time": 91,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with digit as input in last name, response body contains: lastnameInvalid": false,
				"For user with digit as input in last name, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with digit as input in last name, response body contains: lastnameInvalid": {
					"pass": 0,
					"fail": 1
				},
				"For user with digit as input in last name, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with digit as input in last name, response body contains: lastnameInvalid": false,
					"For user with digit as input in last name, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "4dd938af-80df-4a62-9788-8c5ed97ebb37",
			"name": "Create user with special character as input in first name",
			"url": "https://reqres.in/api/users",
			"time": 99,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with special character as input in first name, response body contains: firstnameInvalid": false,
				"For user with digit as input in first name, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with special character as input in first name, response body contains: firstnameInvalid": {
					"pass": 0,
					"fail": 1
				},
				"For user with digit as input in first name, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with special character as input in first name, response body contains: firstnameInvalid": false,
					"For user with digit as input in first name, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "d81e5b78-21f7-4a45-8f1d-4eee6f172f32",
			"name": "Create user with special character as input in last name",
			"url": "https://reqres.in/api/users",
			"time": 95,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with special character as input in last name, response body contains: lastnameInvalid": false,
				"For user with digit as input in last name, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with special character as input in last name, response body contains: lastnameInvalid": {
					"pass": 0,
					"fail": 1
				},
				"For user with digit as input in last name, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with special character as input in last name, response body contains: lastnameInvalid": false,
					"For user with digit as input in last name, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "749faec2-9db6-4f2a-b1e9-e106a253ff7b",
			"name": "Create user with only avatar",
			"url": "https://reqres.in/api/users",
			"time": 97,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with only avatar, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with only avatar, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with only avatar, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "e8e1ecb9-5871-4ddb-93c1-815719b11702",
			"name": "Create user with invalid avatar format",
			"url": "https://reqres.in/api/users",
			"time": 91,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with invalid avatar format, response body contains: invalidAvatarFormat": false,
				"For user with digit as input in last name, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with invalid avatar format, response body contains: invalidAvatarFormat": {
					"pass": 0,
					"fail": 1
				},
				"For user with digit as input in last name, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with invalid avatar format, response body contains: invalidAvatarFormat": false,
					"For user with digit as input in last name, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "f95b0643-295e-4dd2-94c0-3fe2ffc02773",
			"name": "Create user with id",
			"url": "https://reqres.in/api/users",
			"time": 98,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For creating user with id, response body contains: emailIsRequired": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For creating user with id, response body contains: emailIsRequired": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For creating user with id, response body contains: emailIsRequired": false
				}
			]
		},
		{
			"id": "5fdd3a1d-e2ce-498c-a7fd-63f0aa557e1e",
			"name": "Create user with invalid id (string as input)",
			"url": "https://reqres.in/api/users",
			"time": 95,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false
				}
			]
		},
		{
			"id": "ee94f95e-d8cb-41ef-8b9e-a36c747bebdb",
			"name": "Create user with empty id",
			"url": "https://reqres.in/api/users",
			"time": 114,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": false,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				114
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": false,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false
				}
			]
		},
		{
			"id": "41df7152-14dc-4500-b74e-e5ae68c8030f",
			"name": "Create User with all valid parameters along with id",
			"url": "https://reqres.in/api/users",
			"time": 95,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Schema is valid": true,
				"Response status code is 400": false,
				"Response phrase is: Bad Request": false,
				"Response body contains expected error key and error msg as value": false,
				"For user with id as input, response body contains: ID field cannot be provided manually": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"For user with id as input, response body contains: ID field cannot be provided manually": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Schema is valid": true,
					"Response status code is 400": false,
					"Response phrase is: Bad Request": false,
					"Response body contains expected error key and error msg as value": false,
					"For user with id as input, response body contains: ID field cannot be provided manually": false
				}
			]
		},
		{
			"id": "6e72a159-9e50-4ba3-b0d9-3eca1cfccc54",
			"name": "Update User of existing id with all correct body parameters",
			"url": "https://reqres.in/api/users/1",
			"time": 101,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": true,
				"Avatar is either a valid URL or empty string": true,
				"Email is a non-empty string": true,
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Avatar is either a valid URL or empty string": {
					"pass": 1,
					"fail": 0
				},
				"Email is a non-empty string": {
					"pass": 1,
					"fail": 0
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": true,
					"Avatar is either a valid URL or empty string": true,
					"Email is a non-empty string": true,
					"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
				}
			]
		},
		{
			"id": "a3626f76-b09d-4ce4-986d-a2bc6855f838",
			"name": "Update User of existing id with empty firstname",
			"url": "https://reqres.in/api/users/1",
			"time": 89,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": true,
				"Avatar is either a valid URL or empty string": true,
				"Email is a non-empty string": true,
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Avatar is either a valid URL or empty string": {
					"pass": 1,
					"fail": 0
				},
				"Email is a non-empty string": {
					"pass": 1,
					"fail": 0
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				89
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": true,
					"Avatar is either a valid URL or empty string": true,
					"Email is a non-empty string": true,
					"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
				}
			]
		},
		{
			"id": "9e1273d1-83e9-4c63-befd-ff8fd50c3168",
			"name": "Update User of existing id with empty lastname",
			"url": "https://reqres.in/api/users/1",
			"time": 105,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": true,
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				105
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": true,
					"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
				}
			]
		},
		{
			"id": "6aa6c1a9-37a7-498a-aa22-343558212ba7",
			"name": "Update user with empty avatar",
			"url": "https://reqres.in/api/users/1",
			"time": 97,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": true,
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": true,
					"Verify user update by retrieving the created user using GET req: Confirm user data: Email, first name, last name and avatar match the expected values": false
				}
			]
		},
		{
			"id": "8a503167-00f2-4369-b6a7-5e59eb208100",
			"name": "Partial Update User of existing id with only email",
			"url": "https://reqres.in/api/users/1",
			"time": 92,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": true,
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email match the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: Email match the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				92
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": true,
					"Verify user update by retrieving the created user using GET req: Confirm user data: Email match the expected values": false
				}
			]
		},
		{
			"id": "2c990560-082a-49bf-a2c3-d3180cc12282",
			"name": "Partial Update User of existing id with only first_name",
			"url": "https://reqres.in/api/users/1",
			"time": 90,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": false,
				"Verify user update by retrieving the created user using GET req: Confirm user data: first name match the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: first name match the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				90
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": false,
					"Verify user update by retrieving the created user using GET req: Confirm user data: first name match the expected values": false
				}
			]
		},
		{
			"id": "8d6f10d4-7e87-4d64-a9a5-939256d82cc6",
			"name": "Partial Update User of existing id with only last_name",
			"url": "https://reqres.in/api/users/1",
			"time": 111,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": false,
				"Verify user update by retrieving the created user using GET req: Confirm user data: last name matches the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: last name matches the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				111
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": false,
					"Verify user update by retrieving the created user using GET req: Confirm user data: last name matches the expected values": false
				}
			]
		},
		{
			"id": "d16fc4ac-199d-4b99-9380-ee9d02a2474a",
			"name": "Partial Update User of existing id with only avatar",
			"url": "https://reqres.in/api/users/1",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Schema is valid": false,
				"Verify user update by retrieving the created user using GET req: Confirm user data: Avatar matches the expected values": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Verify user update by retrieving the created user using GET req: Confirm user data: Avatar matches the expected values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Schema is valid": false,
					"Verify user update by retrieving the created user using GET req: Confirm user data: Avatar matches the expected values": false
				}
			]
		},
		{
			"id": "9fd66963-d017-4b33-b585-7fc406bb093c",
			"name": "Update user of nonexisting id with all correct body",
			"url": "https://reqres.in/api/users/123",
			"time": 93,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 405": false,
				"Body should matches string: idNotExist": false,
				"Status phrase should be: Method Not Allowed": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 405": {
					"pass": 0,
					"fail": 1
				},
				"Body should matches string: idNotExist": {
					"pass": 0,
					"fail": 1
				},
				"Status phrase should be: Method Not Allowed": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 405": false,
					"Body should matches string: idNotExist": false,
					"Status phrase should be: Method Not Allowed": false
				}
			]
		},
		{
			"id": "75313485-c181-4186-b915-8902131d1ae8",
			"name": "Update user of existing id with all correct body along with id",
			"url": "https://reqres.in/api/users/1",
			"time": 102,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 400": false,
				"Body should matches string: id is not allowed": false,
				"Status phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Body should matches string: id is not allowed": {
					"pass": 0,
					"fail": 1
				},
				"Status phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 400": false,
					"Body should matches string: id is not allowed": false,
					"Status phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "492ee08a-cf2f-4a55-9671-db87d939e344",
			"name": "Update User of existing id with all empty body parameters",
			"url": "https://reqres.in/api/users/1",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For all empty body parameter, response status code is 400": false,
				"For all empty body parameter, response body contains: Bad Request": false,
				"For all empty body parameter, response phrase is: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For all empty body parameter, response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"For all empty body parameter, response body contains: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For all empty body parameter, response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For all empty body parameter, response status code is 400": false,
					"For all empty body parameter, response body contains: Bad Request": false,
					"For all empty body parameter, response phrase is: Bad Request": false
				}
			]
		},
		{
			"id": "65d74877-9f97-4b44-ba80-ff5599cd95bc",
			"name": "Partially Update User of existing id with all empty body parameters (email)",
			"url": "https://reqres.in/api/users/1",
			"time": 97,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For empty body parameter, response status code is 400": false,
				"For empty body parameter, response body contains: Bad Request": false,
				"For empty body parameter, response phrase is: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For empty body parameter, response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"For empty body parameter, response body contains: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For empty body parameter, response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For empty body parameter, response status code is 400": false,
					"For empty body parameter, response body contains: Bad Request": false,
					"For empty body parameter, response phrase is: Bad Request": false
				}
			]
		},
		{
			"id": "e030dd01-c82c-471f-b788-dcb7cecaa598",
			"name": "Update user of existing id with empty email",
			"url": "https://reqres.in/api/users/1",
			"time": 103,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For empty email, response  body should contain: emailIsMissing": false,
				"For empty email, response status code should be 400": false,
				"For empty email, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For empty email, response  body should contain: emailIsMissing": {
					"pass": 0,
					"fail": 1
				},
				"For empty email, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For empty email, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For empty email, response  body should contain: emailIsMissing": false,
					"For empty email, response status code should be 400": false,
					"For empty email, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "60e2c136-4814-4642-b3fb-ce69f77e8754",
			"name": "Update user of existing id with invalid email format",
			"url": "https://reqres.in/api/users/1",
			"time": 97,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid email, response  body should contain: invalidEmail": false,
				"For invalid email, response status code should be 400": false,
				"For invalid email, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid email, response  body should contain: invalidEmail": {
					"pass": 0,
					"fail": 1
				},
				"For invalid email, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid email, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid email, response  body should contain: invalidEmail": false,
					"For invalid email, response status code should be 400": false,
					"For invalid email, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "5a4eff6e-e263-4d0e-bb16-0e3def24f11b",
			"name": "Update user of existing id with invalid firstname format",
			"url": "https://reqres.in/api/users/1",
			"time": 95,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid firstname, response  body should contain: invalidFirstname": false,
				"For invalid firstname, response status code should be 400": false,
				"For invalid firstname, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid firstname, response  body should contain: invalidFirstname": {
					"pass": 0,
					"fail": 1
				},
				"For invalid firstname, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid firstname, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid firstname, response  body should contain: invalidFirstname": false,
					"For invalid firstname, response status code should be 400": false,
					"For invalid firstname, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "cdb8f644-9728-4564-af79-730167647281",
			"name": "Update user of existing id with invalid lastname format",
			"url": "https://reqres.in/api/users/1",
			"time": 96,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid lastname, response  body should contain: invalidLastname": false,
				"For invalid lastname, response status code should be 400": false,
				"For invalid lastname, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid lastname, response  body should contain: invalidLastname": {
					"pass": 0,
					"fail": 1
				},
				"For invalid lastname, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid lastname, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid lastname, response  body should contain: invalidLastname": false,
					"For invalid lastname, response status code should be 400": false,
					"For invalid lastname, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "62b13af8-1761-40f1-8e81-71356926b283",
			"name": "Update User of existing id with large string in firstname",
			"url": "https://reqres.in/api/users/1",
			"time": 102,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For large input in firstname, the status code should be: 400": false,
				"For large input in firstname, the status code should be: Bad Request": false,
				"For large input in firstname, response should contain: firstnameInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For large input in firstname, the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"For large input in firstname, the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For large input in firstname, response should contain: firstnameInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For large input in firstname, the status code should be: 400": false,
					"For large input in firstname, the status code should be: Bad Request": false,
					"For large input in firstname, response should contain: firstnameInvalid": false
				}
			]
		},
		{
			"id": "caf9a1af-1de5-4b82-8ed6-b12095c7da0e",
			"name": "Update User of existing id with large string in lastname",
			"url": "https://reqres.in/api/users/1",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For large input in lastname, the status code should be: 400": false,
				"For large input in lastname, the status code should be: Bad Request": false,
				"For large input in lastname, response should contain: lastnameInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For large input in lastname, the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"For large input in lastname, the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For large input in lastname, response should contain: lastnameInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For large input in lastname, the status code should be: 400": false,
					"For large input in lastname, the status code should be: Bad Request": false,
					"For large input in lastname, response should contain: lastnameInvalid": false
				}
			]
		},
		{
			"id": "82ae9c67-6f12-4ba9-83db-b446f9aebb69",
			"name": "Update User of existing id with large string in avatar",
			"url": "https://reqres.in/api/users/1",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For large input in avatar, the status code should be: 400": false,
				"For large input in avatar, the status code should be: Bad Request": false,
				"For large input in avatar, response should contain: avatarInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For large input in avatar, the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"For large input in avatar, the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For large input in avatar, response should contain: avatarInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For large input in avatar, the status code should be: 400": false,
					"For large input in avatar, the status code should be: Bad Request": false,
					"For large input in avatar, response should contain: avatarInvalid": false
				}
			]
		},
		{
			"id": "38361f7e-ed1a-45bc-afff-5c21e5f28f11",
			"name": "Update user with invalid avatar format",
			"url": "https://reqres.in/api/users/1",
			"time": 95,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid avatar, response  body should contain: invalidAvatar": false,
				"For invalid avatar, response status code should be 400": false,
				"For invalid avatar, response phrase should be: Bad Request": false,
				"Avatar is either a valid URL or null": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid avatar, response  body should contain: invalidAvatar": {
					"pass": 0,
					"fail": 1
				},
				"For invalid avatar, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid avatar, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Avatar is either a valid URL or null": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid avatar, response  body should contain: invalidAvatar": false,
					"For invalid avatar, response status code should be 400": false,
					"For invalid avatar, response phrase should be: Bad Request": false,
					"Avatar is either a valid URL or null": false
				}
			]
		},
		{
			"id": "05dee392-4bb4-4642-ab63-e4e538a5c9a7",
			"name": "Update User using nonexistent field in schema",
			"url": "https://reqres.in/api/users/1",
			"time": 105,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For nonexistent field in schema, the status code should be: 400": false,
				"For nonexistent field in schema, the status code should be: Bad Request": false,
				"For nonexistent field in schema, response should contain: invalidField": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For nonexistent field in schema, the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"For nonexistent field in schema, the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For nonexistent field in schema, response should contain: invalidField": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				105
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For nonexistent field in schema, the status code should be: 400": false,
					"For nonexistent field in schema, the status code should be: Bad Request": false,
					"For nonexistent field in schema, response should contain: invalidField": false
				}
			]
		},
		{
			"id": "37f47746-6e18-4a6d-b42a-64d51dd0ee71",
			"name": "Delete User of existing id",
			"url": "https://reqres.in/api/users/2",
			"time": 95,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Response is a JSON object": false,
				"Response body is not empty": false,
				"status code should be 204 if delete successful": true,
				"status code name has string: No Content": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 0,
					"fail": 1
				},
				"Response body is not empty": {
					"pass": 0,
					"fail": 1
				},
				"status code should be 204 if delete successful": {
					"pass": 1,
					"fail": 0
				},
				"status code name has string: No Content": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": false,
					"Response body is not empty": false,
					"status code should be 204 if delete successful": true,
					"status code name has string: No Content": true
				}
			]
		},
		{
			"id": "781891f0-e5bd-449b-9eea-79a330613b48",
			"name": "Verify Delete User of existing id",
			"url": "https://reqres.in/api/users/2",
			"time": 56,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"status code should be 404 if delete was successful": false,
				"status code name has string: Not Found": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"status code should be 404 if delete was successful": {
					"pass": 0,
					"fail": 1
				},
				"status code name has string: Not Found": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				56
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"status code should be 404 if delete was successful": false,
					"status code name has string: Not Found": false
				}
			]
		},
		{
			"id": "7375b137-35ed-43a8-b956-97cb43b55cb9",
			"name": "Delete User of nonexisting id",
			"url": "https://reqres.in/api/unknown/20",
			"time": 96,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Response is a JSON object": false,
				"Response body is not empty": false,
				"status code should be 204 if delete successful": false,
				"status code name has string: No Content": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 0,
					"fail": 1
				},
				"Response body is not empty": {
					"pass": 0,
					"fail": 1
				},
				"status code should be 204 if delete successful": {
					"pass": 0,
					"fail": 1
				},
				"status code name has string: No Content": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": false,
					"Response body is not empty": false,
					"status code should be 204 if delete successful": false,
					"status code name has string: No Content": false
				}
			]
		},
		{
			"id": "f8090954-e89c-4618-b40a-1bc44d48825d",
			"name": "Request with Default Parameters",
			"url": "https://reqres.in/api/unknown",
			"time": 105,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of resources": true,
				"Response contains expected properties for each resource": true,
				"Unknown resources Schema is valid": true,
				"Page number is correct": true,
				"Number of resources per page is correct": true,
				"Total number of resources is correct": true,
				"Total number of pages is correct": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of resources": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties for each resource": {
					"pass": 1,
					"fail": 0
				},
				"Unknown resources Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct": {
					"pass": 1,
					"fail": 0
				},
				"Number of resources per page is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of resources is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				105
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of resources": true,
					"Response contains expected properties for each resource": true,
					"Unknown resources Schema is valid": true,
					"Page number is correct": true,
					"Number of resources per page is correct": true,
					"Total number of resources is correct": true,
					"Total number of pages is correct": true
				}
			]
		},
		{
			"id": "b13a3906-5ebb-4c86-b83f-ede33d438b4c",
			"name": "Request with Valid Page and Per Page Parameters",
			"url": "https://reqres.in/api/unknown?page=4&per_page=3",
			"time": 97,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of resources": true,
				"Response contains expected properties for each resource": true,
				"Unknown resources Schema is valid": true,
				"Page number is correct": true,
				"Number of resources per page is correct": true,
				"Total number of resources is correct": true,
				"Total number of pages is correct": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of resources": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties for each resource": {
					"pass": 1,
					"fail": 0
				},
				"Unknown resources Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct": {
					"pass": 1,
					"fail": 0
				},
				"Number of resources per page is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of resources is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of resources": true,
					"Response contains expected properties for each resource": true,
					"Unknown resources Schema is valid": true,
					"Page number is correct": true,
					"Number of resources per page is correct": true,
					"Total number of resources is correct": true,
					"Total number of pages is correct": true
				}
			]
		},
		{
			"id": "d0935f8b-af72-4c09-8ffd-3dfa918fa13c",
			"name": "Request for the Last Page",
			"url": "https://reqres.in/api/unknown?page=2",
			"time": 106,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of resources": true,
				"Response contains expected properties for each resource": true,
				"Unknown resources Schema is valid": true,
				"Page number is correct": true,
				"Number of resources per page is correct": true,
				"Total number of resources is correct": true,
				"Total number of pages is correct": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of resources": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties for each resource": {
					"pass": 1,
					"fail": 0
				},
				"Unknown resources Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct": {
					"pass": 1,
					"fail": 0
				},
				"Number of resources per page is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of resources is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				106
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of resources": true,
					"Response contains expected properties for each resource": true,
					"Unknown resources Schema is valid": true,
					"Page number is correct": true,
					"Number of resources per page is correct": true,
					"Total number of resources is correct": true,
					"Total number of pages is correct": true
				}
			]
		},
		{
			"id": "006f4fa1-9854-4698-a798-3b8f63ad3181",
			"name": "Request for a Single Item on a Page",
			"url": "https://reqres.in/api/unknown?per_page=1",
			"time": 96,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains 'total_pages' field": true,
				"Response contains 'total' field": true,
				"Response contains 'per_page' field": true,
				"Response contains 'page' field": true,
				"Response contains an array of resources": true,
				"Response contains expected properties for each resource": true,
				"Unknown resources Schema is valid": true,
				"Page number is correct": true,
				"Number of resources per page is correct": true,
				"Total number of resources is correct": true,
				"Total number of pages is correct": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total_pages' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'total' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'per_page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains 'page' field": {
					"pass": 1,
					"fail": 0
				},
				"Response contains an array of resources": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties for each resource": {
					"pass": 1,
					"fail": 0
				},
				"Unknown resources Schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Page number is correct": {
					"pass": 1,
					"fail": 0
				},
				"Number of resources per page is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of resources is correct": {
					"pass": 1,
					"fail": 0
				},
				"Total number of pages is correct": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains 'total_pages' field": true,
					"Response contains 'total' field": true,
					"Response contains 'per_page' field": true,
					"Response contains 'page' field": true,
					"Response contains an array of resources": true,
					"Response contains expected properties for each resource": true,
					"Unknown resources Schema is valid": true,
					"Page number is correct": true,
					"Number of resources per page is correct": true,
					"Total number of resources is correct": true,
					"Total number of pages is correct": true
				}
			]
		},
		{
			"id": "304a2873-434c-49fa-8fa5-4a304ae0e1d6",
			"name": "Request with Default Parameters using invalid method Post",
			"url": "https://reqres.in/api/unknown",
			"time": 99,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid method, response status code should be 405": false,
				"For invalid method, response phrase should be: Method Not Allowed": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid method, response status code should be 405": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response phrase should be: Method Not Allowed": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid method, response status code should be 405": false,
					"For invalid method, response phrase should be: Method Not Allowed": false
				}
			]
		},
		{
			"id": "87b08e4d-75c2-4b57-9649-18fd4e942f20",
			"name": "Request for a Page Beyond Total Pages",
			"url": "https://reqres.in/api/unknown?page=20",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page beyond total pages, response status code should be 404": false,
				"For retrieving page beyond total pages, response phrase should be: Not Found": false,
				"For retrieving page beyond total pages, response should contain: []": true,
				"For retrieving page beyond total pages, response should contain: page doesn't exist": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page beyond total pages, response status code should be 404": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page beyond total pages, response phrase should be: Not Found": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page beyond total pages, response should contain: []": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page beyond total pages, response should contain: page doesn't exist": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page beyond total pages, response status code should be 404": false,
					"For retrieving page beyond total pages, response phrase should be: Not Found": false,
					"For retrieving page beyond total pages, response should contain: []": true,
					"For retrieving page beyond total pages, response should contain: page doesn't exist": false
				}
			]
		},
		{
			"id": "6f50ee15-bfd9-4cff-8a9e-3250f99d7ca1",
			"name": "Request with Negative Page Number",
			"url": "https://reqres.in/api/unknown?page=-2",
			"time": 100,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page with negative page number, response status code should be 400": false,
				"For retrieving page with negative page number, response phrase should be: Bad Request": false,
				"For retrieving page where page is negative, response should contain: page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page with negative page number, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with negative page number, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where page is negative, response should contain: page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page with negative page number, response status code should be 400": false,
					"For retrieving page with negative page number, response phrase should be: Bad Request": false,
					"For retrieving page where page is negative, response should contain: page is invalid": false
				}
			]
		},
		{
			"id": "535860ad-5658-4641-993c-3ff8082c8133",
			"name": "Request with Negative Per Page Number",
			"url": "https://reqres.in/api/unknown?per_page=-2",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page where per_page is negative, response status code should be 400": false,
				"For retrieving page where per_page is negative, response phrase should be: Bad Request": false,
				"For retrieving page where per_page is negative, response should contain: per_page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page where per_page is negative, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where per_page is negative, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where per_page is negative, response should contain: per_page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page where per_page is negative, response status code should be 400": false,
					"For retrieving page where per_page is negative, response phrase should be: Bad Request": false,
					"For retrieving page where per_page is negative, response should contain: per_page is invalid": false
				}
			]
		},
		{
			"id": "4a490171-b131-42ba-aaf6-e047247beeba",
			"name": "Request with Non-Integer Page Number (String)",
			"url": "https://reqres.in/api/unknown?page=\"abc\"",
			"time": 97,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page with non-integer page number, response status code should be 400": false,
				"For retrieving page with non-integer number, response phrase should be: Bad Request": false,
				"For retrieving page where page is non-integer, response should contain: page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page with non-integer page number, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with non-integer number, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where page is non-integer, response should contain: page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page with non-integer page number, response status code should be 400": false,
					"For retrieving page with non-integer number, response phrase should be: Bad Request": false,
					"For retrieving page where page is non-integer, response should contain: page is invalid": false
				}
			]
		},
		{
			"id": "29ea9237-4251-4a67-9a9f-5b264aea4d7c",
			"name": "Request with Non-Integer per_page Number (String)",
			"url": "https://reqres.in/api/unknown?per_page=\"abc\"",
			"time": 101,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page with non-integer per_page number, response status code should be 400": false,
				"For retrieving page with non-integer per_page number, response phrase should be: Bad Request": false,
				"For retrieving page where per_page is non-integer, response should contain: per_page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page with non-integer per_page number, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with non-integer per_page number, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where per_page is non-integer, response should contain: per_page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page with non-integer per_page number, response status code should be 400": false,
					"For retrieving page with non-integer per_page number, response phrase should be: Bad Request": false,
					"For retrieving page where per_page is non-integer, response should contain: per_page is invalid": false
				}
			]
		},
		{
			"id": "e997e1f6-3aa2-4a5b-a5a0-1f2bc177474e",
			"name": "Request with Exceedingly Large Page Number",
			"url": "https://reqres.in/api/unknown?page=1265436789",
			"time": 96,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page with exceedingly large page number, response status code should be 404": false,
				"For retrieving page with exceedingly large page number, response phrase should be: Page Not Found": false,
				"For retrieving page with exceedingly large page number, response should contain: []": true,
				"For retrieving page with exceedingly large page number, response should contain: requested page does not exist": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page with exceedingly large page number, response status code should be 404": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large page number, response phrase should be: Page Not Found": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large page number, response should contain: []": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page with exceedingly large page number, response should contain: requested page does not exist": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page with exceedingly large page number, response status code should be 404": false,
					"For retrieving page with exceedingly large page number, response phrase should be: Page Not Found": false,
					"For retrieving page with exceedingly large page number, response should contain: []": true,
					"For retrieving page with exceedingly large page number, response should contain: requested page does not exist": false
				}
			]
		},
		{
			"id": "1758b3b5-df3b-4a65-a3d6-87b4d2c6906f",
			"name": "Request with Exceedingly Large per_page Number",
			"url": "https://reqres.in/api/unknown?per_page=1265436789",
			"time": 101,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page with exceedingly large per_page number, response status code should be 404": false,
				"For retrieving page with exceedingly large per_page number, response phrase should be: Page Not Found": false,
				"For retrieving page with exceedingly large per_page number, response should contain: per_page is invalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page with exceedingly large per_page number, response status code should be 404": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large per_page number, response phrase should be: Page Not Found": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page with exceedingly large per_page number, response should contain: per_page is invalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page with exceedingly large per_page number, response status code should be 404": false,
					"For retrieving page with exceedingly large per_page number, response phrase should be: Page Not Found": false,
					"For retrieving page with exceedingly large per_page number, response should contain: per_page is invalid": false
				}
			]
		},
		{
			"id": "9ac2f29d-0bd1-4845-afb2-19007ab2cd2d",
			"name": "Request with unknown query params",
			"url": "https://reqres.in/api/unknown?job=\"something\"&age=12",
			"time": 107,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For retrieving page where query params are unknown, response status code should be 400": false,
				"For retrieving page where query params are unknown, response phrase should be: Bad Request": false,
				"For retrieving page where query params are unknown, response should contain: unknown query params": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving page where query params are unknown, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where query params are unknown, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For retrieving page where query params are unknown, response should contain: unknown query params": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				107
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For retrieving page where query params are unknown, response status code should be 400": false,
					"For retrieving page where query params are unknown, response phrase should be: Bad Request": false,
					"For retrieving page where query params are unknown, response should contain: unknown query params": false
				}
			]
		},
		{
			"id": "06fee1cb-ee6b-4229-b627-2322e68bc43f",
			"name": "Request with existing valid id",
			"url": "https://reqres.in/api/unknown/7",
			"time": 104,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": true,
				"Status code is 200": true,
				"For successfully fetching a single unknown resource, response phrase should be: OK": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"For successfully fetching a single unknown resource, response phrase should be: OK": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				104
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": true,
					"Status code is 200": true,
					"For successfully fetching a single unknown resource, response phrase should be: OK": true
				}
			]
		},
		{
			"id": "4b5670cf-6bd7-4f0a-9671-89c9c8ce831c",
			"name": "Request with minimum valid id",
			"url": "https://reqres.in/api/unknown/1",
			"time": 102,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": true,
				"Status code is 200": true,
				"For successfully fetching a single unknown resource, response phrase should be: OK": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"For successfully fetching a single unknown resource, response phrase should be: OK": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": true,
					"Status code is 200": true,
					"For successfully fetching a single unknown resource, response phrase should be: OK": true
				}
			]
		},
		{
			"id": "7f14e5f7-3b04-4635-b66b-356d1a6c8436",
			"name": "Request with maximum valid id",
			"url": "https://reqres.in/api/unknown/12",
			"time": 96,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": true,
				"Status code is 200": true,
				"For successfully fetching a single unknown resource, response phrase should be: OK": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"For successfully fetching a single unknown resource, response phrase should be: OK": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": true,
					"Status code is 200": true,
					"For successfully fetching a single unknown resource, response phrase should be: OK": true
				}
			]
		},
		{
			"id": "9ed6a035-6fa2-472b-8e8b-88f474ad0ece",
			"name": "Request with non-existing id",
			"url": "https://reqres.in/api/unknown/13",
			"time": 95,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 404": true,
				"For retrieving non existing resource, response phrase should be: Not Found": true,
				"For retrieving non existing resource, response should contain: {}": true,
				"For retrieving non existing resource, response should contain: could not find the resource": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving non existing resource, response phrase should be: Not Found": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving non existing resource, response should contain: {}": {
					"pass": 1,
					"fail": 0
				},
				"For retrieving non existing resource, response should contain: could not find the resource": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 404": true,
					"For retrieving non existing resource, response phrase should be: Not Found": true,
					"For retrieving non existing resource, response should contain: {}": true,
					"For retrieving non existing resource, response should contain: could not find the resource": false
				}
			]
		},
		{
			"id": "f9b20627-d438-4997-9f78-6f6877447482",
			"name": "Request with invalid ID format (string)",
			"url": "https://reqres.in/api/unknown/\"abc\"",
			"time": 96,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid id, response  body should contain: invalid Id": false,
				"For invalid id, response status code should be 400": false,
				"For invalid id, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid id, response  body should contain: invalid Id": {
					"pass": 0,
					"fail": 1
				},
				"For invalid id, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid id, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid id, response  body should contain: invalid Id": false,
					"For invalid id, response status code should be 400": false,
					"For invalid id, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "92932196-cd8a-40a7-9e9c-5ce78b2a74cf",
			"name": "Request with negative Id",
			"url": "https://reqres.in/api/unknown/-1",
			"time": 96,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid id, response  body should contain: invalid Id": false,
				"For invalid id, response status code should be 400": false,
				"For invalid id, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid id, response  body should contain: invalid Id": {
					"pass": 0,
					"fail": 1
				},
				"For invalid id, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid id, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid id, response  body should contain: invalid Id": false,
					"For invalid id, response status code should be 400": false,
					"For invalid id, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "562ea186-9058-4f1e-b987-22bb3fc97818",
			"name": "Request with existing ID using invalid POST method",
			"url": "https://reqres.in/api/unknown/1",
			"time": 95,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid method, response status code should be 405": false,
				"For invalid method, response phrase should be: Method Not Allowed": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid method, response status code should be 405": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response phrase should be: Method Not Allowed": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid method, response status code should be 405": false,
					"For invalid method, response phrase should be: Method Not Allowed": false
				}
			]
		},
		{
			"id": "80cc0185-e032-4587-b863-aed24172c42b",
			"name": "Request with existing ID using invalid PUT method",
			"url": "https://reqres.in/api/unknown/1",
			"time": 107,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid method, response status code should be 400": false,
				"For invalid method, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid method, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				107
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid method, response status code should be 400": false,
					"For invalid method, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "ed8e11d6-5799-40e4-ac5e-95bf52965c40",
			"name": "Request with existing ID using invalid PATCH method",
			"url": "https://reqres.in/api/unknown/1",
			"time": 95,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid method, response status code should be 400": false,
				"For invalid method, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid method, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid method, response status code should be 400": false,
					"For invalid method, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "46605222-9bbd-4b75-b02e-0fd5092db792",
			"name": "Create Resource with all valid data",
			"url": "https://reqres.in/api/unknown",
			"time": 94,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 201": true,
				"For successfully creating a single unknown resource, response phrase should be: Created": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"For successfully creating a single unknown resource, response phrase should be: Created": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 201": true,
					"For successfully creating a single unknown resource, response phrase should be: Created": true
				}
			]
		},
		{
			"id": "9efbc96c-df8f-4986-b661-14faee7b2c7d",
			"name": "Create Resource with only name",
			"url": "https://reqres.in/api/unknown",
			"time": 94,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 201": true,
				"For successfully creating a single unknown resource, response phrase should be: Created": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"For successfully creating a single unknown resource, response phrase should be: Created": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 201": true,
					"For successfully creating a single unknown resource, response phrase should be: Created": true
				}
			]
		},
		{
			"id": "a97d2a48-fc00-4e5e-bc94-af833cf2857c",
			"name": "Create Resource with only year",
			"url": "https://reqres.in/api/unknown",
			"time": 93,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 201": true,
				"For successfully creating a single unknown resource, response phrase should be: Created": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"For successfully creating a single unknown resource, response phrase should be: Created": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 201": true,
					"For successfully creating a single unknown resource, response phrase should be: Created": true
				}
			]
		},
		{
			"id": "3c572482-431e-41f1-a2f7-f777824d4a19",
			"name": "Create Resource with only color",
			"url": "https://reqres.in/api/unknown",
			"time": 96,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 201": true,
				"For successfully creating a single unknown resource, response phrase should be: Created": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"For successfully creating a single unknown resource, response phrase should be: Created": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 201": true,
					"For successfully creating a single unknown resource, response phrase should be: Created": true
				}
			]
		},
		{
			"id": "eadb04c2-ed5c-4199-a05c-ffdb5511b0d2",
			"name": "Create Resource with only pantone_value",
			"url": "https://reqres.in/api/unknown",
			"time": 90,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 201": true,
				"For successfully creating a single unknown resource, response phrase should be: Created": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"For successfully creating a single unknown resource, response phrase should be: Created": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				90
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 201": true,
					"For successfully creating a single unknown resource, response phrase should be: Created": true
				}
			]
		},
		{
			"id": "ac0e05a0-fa47-4398-98f0-d10c81c11b71",
			"name": "Create Resource with all valid data (provide Id manually)",
			"url": "https://reqres.in/api/unknown",
			"time": 93,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is not 201 (Created)": false,
				"Status code is a client error (4xx)": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is not 201 (Created)": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (4xx)": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is not 201 (Created)": false,
					"Status code is a client error (4xx)": false
				}
			]
		},
		{
			"id": "582a884d-0314-40bb-ae50-43c47588b0d0",
			"name": "Create Resource with invalid request body",
			"url": "https://reqres.in/api/unknown",
			"time": 112,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is not 201 (Created)": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is not 201 (Created)": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				112
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is not 201 (Created)": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "2f45e37c-5bbe-40ce-b5c6-20d9a886bf7a",
			"name": "Create resource with invalid name format (Integer)",
			"url": "https://reqres.in/api/unknown",
			"time": 107,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid name": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid name": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				107
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid name": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "388fdf50-44d1-40f7-82f8-a95c9788994f",
			"name": "Create resource with invalid color format (Integer)",
			"url": "https://reqres.in/api/unknown",
			"time": 97,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid color": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid color": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid color": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "79cb3946-2f8a-4213-b812-df869bb6e62e",
			"name": "Create resource with invalid pantone_value format (Integer)",
			"url": "https://reqres.in/api/unknown",
			"time": 99,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid pantone_value": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid pantone_value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid pantone_value": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "ff5457cd-31ef-4cec-bf22-791b45c395ad",
			"name": "Create Resource with Invalid year format (string)",
			"url": "https://reqres.in/api/unknown",
			"time": 99,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid year": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid year": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid year": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "e5ae73f0-e18e-450b-b479-b6262e04356a",
			"name": "Create Resource with only empty name",
			"url": "https://reqres.in/api/unknown",
			"time": 97,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid name": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid name": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid name": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "832e2cbd-282b-4f7c-8ae8-a147066e5091",
			"name": "Create resource with only empty year",
			"url": "https://reqres.in/api/unknown",
			"time": 92,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid year": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid year": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				92
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid year": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "5d1d7bb6-ad21-4da2-bcf8-a040583b78c5",
			"name": "Create resource with only empty pantone_value",
			"url": "https://reqres.in/api/unknown",
			"time": 92,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid pantone_value": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid pantone_value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				92
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid pantone_value": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "7b83a4d4-6a65-4ac4-ba91-3afdb14acf41",
			"name": "Create resource with only empty color",
			"url": "https://reqres.in/api/unknown",
			"time": 95,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid color": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid color": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid color": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "66e1fe7c-3c84-4675-ab8a-b053fb731305",
			"name": "Create resource with negative year",
			"url": "https://reqres.in/api/unknown",
			"time": 99,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid year": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid year": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid year": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "0354999d-cf64-4150-9d69-af5636866388",
			"name": "Create resource with larger integer year than: 99999999999999999999999",
			"url": "https://reqres.in/api/unknown",
			"time": 96,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"response body contains: Invalid year": false,
				"Status code is a client error (400)": false,
				"Response status is Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"response body contains: Invalid year": {
					"pass": 0,
					"fail": 1
				},
				"Status code is a client error (400)": {
					"pass": 0,
					"fail": 1
				},
				"Response status is Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"response body contains: Invalid year": false,
					"Status code is a client error (400)": false,
					"Response status is Bad Request": false
				}
			]
		},
		{
			"id": "465ae8fc-0f4a-47ce-be32-7d73d47d1358",
			"name": "Request with minimum year value 0 to 1999",
			"url": "https://reqres.in/api/unknown",
			"time": 93,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 201 which means year value is acceptable within 0 to 1999": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 201 which means year value is acceptable within 0 to 1999": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 201 which means year value is acceptable within 0 to 1999": true
				}
			]
		},
		{
			"id": "db3e17da-a0c7-4f94-9aec-b25b13daa0ae",
			"name": "Request with maximum year value 0 to 1999",
			"url": "https://reqres.in/api/unknown",
			"time": 96,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 201 which means year value is acceptable within 0 to 1999": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 201 which means year value is acceptable within 0 to 1999": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 201 which means year value is acceptable within 0 to 1999": true
				}
			]
		},
		{
			"id": "52d3c337-4a34-413e-9cd8-d4833cc88e26",
			"name": "Request with minimum year value 2000 to 2030",
			"url": "https://reqres.in/api/unknown",
			"time": 91,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 201 which means year value is acceptable within 2000 to 2030": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 201 which means year value is acceptable within 2000 to 2030": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 201 which means year value is acceptable within 2000 to 2030": true
				}
			]
		},
		{
			"id": "f37474b5-f42c-4f5f-945e-08e02cda49fb",
			"name": "Request with maximum year value 2000 to 2030",
			"url": "https://reqres.in/api/unknown",
			"time": 108,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 201 which means year value is acceptable within 2000 to 2030": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 201 which means year value is acceptable within 2000 to 2030": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				108
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 201 which means year value is acceptable within 2000 to 2030": true
				}
			]
		},
		{
			"id": "6a2b4406-89b9-4c31-9381-22ca8bed1249",
			"name": "Request with minimum year value 2031 to 9999",
			"url": "https://reqres.in/api/unknown",
			"time": 94,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 201 which means year value is acceptable within 2031 to 9999": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 201 which means year value is acceptable within 2031 to 9999": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 201 which means year value is acceptable within 2031 to 9999": true
				}
			]
		},
		{
			"id": "fa69acc5-1e2f-44e1-8a10-615da366c41c",
			"name": "Request with maximum year value 2031 to 9999",
			"url": "https://reqres.in/api/unknown",
			"time": 103,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 201 which means year value is acceptable within 2031 to 9999": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 201 which means year value is acceptable within 2031 to 9999": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 201 which means year value is acceptable within 2031 to 9999": true
				}
			]
		},
		{
			"id": "a617bafe-d406-4f32-9fd7-f46338f7486b",
			"name": "Update Resource of existing id with all valid data",
			"url": "https://reqres.in/api/unknown/1",
			"time": 96,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "bb86300f-40f4-4fab-8f16-e36a09218577",
			"name": "Update Resource of existing id with empty name",
			"url": "https://reqres.in/api/unknown/1",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "323c9857-6711-4d6e-adc6-4aff9c561d8e",
			"name": "Update Resource of existing id with empty year",
			"url": "https://reqres.in/api/unknown/1",
			"time": 104,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				104
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "9077b4e9-69c4-45b7-bd2c-c3e2525c67b1",
			"name": "Update Resource of existing id with empty color",
			"url": "https://reqres.in/api/unknown/1",
			"time": 95,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "b63764e0-f14d-46f6-af59-3002fff81d6b",
			"name": "Update Resource of existing id with empty pantone_value",
			"url": "https://reqres.in/api/unknown/1",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "56fc50f0-b86e-4544-abbe-02e2f8f6f5eb",
			"name": "Partial Update Resource of existing id with only name",
			"url": "https://reqres.in/api/unknown/1",
			"time": 91,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "3a9b2e3f-1837-481a-b635-4d1ddb630462",
			"name": "Partial Update Resource with only year",
			"url": "https://reqres.in/api/unknown/1",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "2ef148e6-4f61-47d5-ada0-96692d975eb6",
			"name": "Partial Update Resource with only color",
			"url": "https://reqres.in/api/unknown/1",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "e75eed0b-b670-4978-8fb5-33ad83620378",
			"name": "Partial Update Resource with only pantone_value",
			"url": "https://reqres.in/api/unknown/1",
			"time": 90,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Unknown schema is valid": false,
				"Status code is 200": true,
				"Status code is OK": true,
				"Confirm resource data update by retrieving the resource using GET request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Unknown schema is valid": {
					"pass": 0,
					"fail": 1
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code is OK": {
					"pass": 1,
					"fail": 0
				},
				"Confirm resource data update by retrieving the resource using GET request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				90
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Unknown schema is valid": false,
					"Status code is 200": true,
					"Status code is OK": true,
					"Confirm resource data update by retrieving the resource using GET request": false
				}
			]
		},
		{
			"id": "c3246507-d6a5-44a8-b42b-d98be661d3e0",
			"name": "Update non-existing resource id with all correct body",
			"url": "https://reqres.in/api/unknown/123",
			"time": 112,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 405": false,
				"Body should matches string: idNotExist": false,
				"Status phrase should be: Method Not Allowed": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 405": {
					"pass": 0,
					"fail": 1
				},
				"Body should matches string: idNotExist": {
					"pass": 0,
					"fail": 1
				},
				"Status phrase should be: Method Not Allowed": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				112
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 405": false,
					"Body should matches string: idNotExist": false,
					"Status phrase should be: Method Not Allowed": false
				}
			]
		},
		{
			"id": "22add796-d49c-42d5-a7e0-68d7b9f32734",
			"name": "Update existing resource id with all correct body along with id",
			"url": "https://reqres.in/api/unknown/1",
			"time": 101,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 400": false,
				"Body should matches string: id is not allowed": false,
				"Status phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Body should matches string: id is not allowed": {
					"pass": 0,
					"fail": 1
				},
				"Status phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 400": false,
					"Body should matches string: id is not allowed": false,
					"Status phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "d209cf84-d34a-4eb3-a305-de9e90ecd358",
			"name": "Update Resource of existing id with all empty body parameters",
			"url": "https://reqres.in/api/unknown/1",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For all empty body parameter, response status code is 400": false,
				"For all empty body parameter, response body contains: Bad Request": false,
				"For all empty body parameter, response phrase is: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For all empty body parameter, response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"For all empty body parameter, response body contains: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For all empty body parameter, response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For all empty body parameter, response status code is 400": false,
					"For all empty body parameter, response body contains: Bad Request": false,
					"For all empty body parameter, response phrase is: Bad Request": false
				}
			]
		},
		{
			"id": "b2431a57-24a4-411f-84d5-02a8dd73e094",
			"name": "Partially Update Resource of existing id with all empty body parameters (name)",
			"url": "https://reqres.in/api/unknown/1",
			"time": 103,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For empty body parameter, response status code is 400": false,
				"For empty body parameter, response body contains: Bad Request": false,
				"For empty body parameter, response phrase is: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For empty body parameter, response status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"For empty body parameter, response body contains: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For empty body parameter, response phrase is: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For empty body parameter, response status code is 400": false,
					"For empty body parameter, response body contains: Bad Request": false,
					"For empty body parameter, response phrase is: Bad Request": false
				}
			]
		},
		{
			"id": "11c6f460-1432-42ea-b46e-1e96a64e8834",
			"name": "Update Resource of existing id with name format",
			"url": "https://reqres.in/api/unknown/1",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid name, response  body should contain: invalidName": false,
				"For invalid name, response status code should be 400": false,
				"For invalid name, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid name, response  body should contain: invalidName": {
					"pass": 0,
					"fail": 1
				},
				"For invalid name, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid name, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid name, response  body should contain: invalidName": false,
					"For invalid name, response status code should be 400": false,
					"For invalid name, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "8eaf0465-5c4f-48a9-a40d-04ffa4ed6cf4",
			"name": "Update Resource of existing id with invalid year format",
			"url": "https://reqres.in/api/unknown/1",
			"time": 96,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid year, response  body should contain: invalidYear": false,
				"For invalid year, response status code should be 400": false,
				"For invalid year, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid year, response  body should contain: invalidYear": {
					"pass": 0,
					"fail": 1
				},
				"For invalid year, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid year, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid year, response  body should contain: invalidYear": false,
					"For invalid year, response status code should be 400": false,
					"For invalid year, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "adafa373-b483-4aed-9c64-af1f42e66322",
			"name": "Update Resource of existing id with invalid color format",
			"url": "https://reqres.in/api/unknown/1",
			"time": 93,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid color, response  body should contain: invalidColor": false,
				"For invalid color, response status code should be 400": false,
				"For invalid color, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid color, response  body should contain: invalidColor": {
					"pass": 0,
					"fail": 1
				},
				"For invalid color, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid color, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid color, response  body should contain: invalidColor": false,
					"For invalid color, response status code should be 400": false,
					"For invalid color, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "9ff5f4c6-d5dc-4991-8e0a-fc2f1a55fa6a",
			"name": "Update Resource of existing id with invalid pantone_value format",
			"url": "https://reqres.in/api/unknown/1",
			"time": 101,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For invalid color, response  body should contain: invalidColor": false,
				"For invalid color, response status code should be 400": false,
				"For invalid color, response phrase should be: Bad Request": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For invalid color, response  body should contain: invalidColor": {
					"pass": 0,
					"fail": 1
				},
				"For invalid color, response status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"For invalid color, response phrase should be: Bad Request": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For invalid color, response  body should contain: invalidColor": false,
					"For invalid color, response status code should be 400": false,
					"For invalid color, response phrase should be: Bad Request": false
				}
			]
		},
		{
			"id": "5e06e686-4802-4b3c-a6c9-f6260b25b793",
			"name": "Update Resource of existing id with large string in name",
			"url": "https://reqres.in/api/unknown/1",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For large input in name, the status code should be: 400": false,
				"For large input in name, the status code should be: Bad Request": false,
				"For large input in name, response should contain: nameInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For large input in name, the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"For large input in name, the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For large input in name, response should contain: nameInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For large input in name, the status code should be: 400": false,
					"For large input in name, the status code should be: Bad Request": false,
					"For large input in name, response should contain: nameInvalid": false
				}
			]
		},
		{
			"id": "dcd3bf0d-8977-4bf3-8fdc-5eb50807cc42",
			"name": "Update Resource of existing id with large string in color",
			"url": "https://reqres.in/api/unknown/1",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"the status code should be: 400": false,
				"the status code should be: Bad Request": false,
				"response should contain: colorInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"response should contain: colorInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"the status code should be: 400": false,
					"the status code should be: Bad Request": false,
					"response should contain: colorInvalid": false
				}
			]
		},
		{
			"id": "0418cde8-f5a9-4823-bc16-0267ec60fb5d",
			"name": "Update Resource of existing id with large string in pantone_value",
			"url": "https://reqres.in/api/unknown/1",
			"time": 91,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"the status code should be: 400": false,
				"the status code should be: Bad Request": false,
				"response should contain: pantoneValueInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"response should contain: pantoneValueInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"the status code should be: 400": false,
					"the status code should be: Bad Request": false,
					"response should contain: pantoneValueInvalid": false
				}
			]
		},
		{
			"id": "a92e16dd-fd38-4cdb-ab2d-dd5aff0734d0",
			"name": "Update Resource of existing id with large Integer in year",
			"url": "https://reqres.in/api/unknown/1",
			"time": 103,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"the status code should be: 400": false,
				"the status code should be: Bad Request": false,
				"response should contain: yearInvalid": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"response should contain: yearInvalid": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				103
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"the status code should be: 400": false,
					"the status code should be: Bad Request": false,
					"response should contain: yearInvalid": false
				}
			]
		},
		{
			"id": "99483d95-9abf-4f0d-b75e-9e375bf6c040",
			"name": "Update Resource using nonexistent field in schema",
			"url": "https://reqres.in/api/users/1",
			"time": 112,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"For nonexistent field in schema, the status code should be: 400": false,
				"For nonexistent field in schema, the status code should be: Bad Request": false,
				"For nonexistent field in schema, response should contain: invalidField": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"For nonexistent field in schema, the status code should be: 400": {
					"pass": 0,
					"fail": 1
				},
				"For nonexistent field in schema, the status code should be: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"For nonexistent field in schema, response should contain: invalidField": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				112
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"For nonexistent field in schema, the status code should be: 400": false,
					"For nonexistent field in schema, the status code should be: Bad Request": false,
					"For nonexistent field in schema, response should contain: invalidField": false
				}
			]
		},
		{
			"id": "1b9d2307-4fa0-4bc0-9117-77418932abdc",
			"name": "Delete Resource of existing id",
			"url": "https://reqres.in/api/unknown/2",
			"time": 97,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Response is a JSON object": false,
				"Response body is not empty": false,
				"status code should be 204 if delete successful": true,
				"status code name has string: No Content": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 0,
					"fail": 1
				},
				"Response body is not empty": {
					"pass": 0,
					"fail": 1
				},
				"status code should be 204 if delete successful": {
					"pass": 1,
					"fail": 0
				},
				"status code name has string: No Content": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": false,
					"Response body is not empty": false,
					"status code should be 204 if delete successful": true,
					"status code name has string: No Content": true
				}
			]
		},
		{
			"id": "48ccf629-5d36-4706-9406-78a3db8bdb18",
			"name": "Verify Delete Resource of existing id",
			"url": "https://reqres.in/api/unknown/2",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"status code should be 404 if delete was successful": false,
				"status code name has string: Not Found": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"status code should be 404 if delete was successful": {
					"pass": 0,
					"fail": 1
				},
				"status code name has string: Not Found": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"status code should be 404 if delete was successful": false,
					"status code name has string: Not Found": false
				}
			]
		},
		{
			"id": "36c8902f-929d-4032-affc-d56a3e39e289",
			"name": "Delete Resource of nonexisting id",
			"url": "https://reqres.in/api/unknown/20",
			"time": 90,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Response is a JSON object": false,
				"Response body is not empty": false,
				"status code should be 204 if delete successful": false,
				"status code name has string: No Content": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 0,
					"fail": 1
				},
				"Response body is not empty": {
					"pass": 0,
					"fail": 1
				},
				"status code should be 204 if delete successful": {
					"pass": 0,
					"fail": 1
				},
				"status code name has string: No Content": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				90
			],
			"allTests": [
				{
					"Response is a JSON object": false,
					"Response body is not empty": false,
					"status code should be 204 if delete successful": false,
					"status code name has string: No Content": false
				}
			]
		},
		{
			"id": "3e524f9e-32b1-4d65-8dd5-1207896d70a1",
			"name": "Registration of defined user with all valid parameter(username, email and password)",
			"url": "https://reqres.in/api/register",
			"time": 111,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": false,
				"Response contains expected properties id and token in the response": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				},
				"Response contains expected properties id and token in the response": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				111
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": false,
					"Response contains expected properties id and token in the response": false
				}
			]
		},
		{
			"id": "42e9939b-9b3e-4f6a-92e5-8bf506a4d6f4",
			"name": "Registration of a new user",
			"url": "https://reqres.in/api/register",
			"time": 102,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": false,
				"Response contains expected properties id and token in the response": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				},
				"Response contains expected properties id and token in the response": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": false,
					"Response contains expected properties id and token in the response": false
				}
			]
		},
		{
			"id": "035c8ce6-3d79-49f7-89cb-c6211e428b42",
			"name": "Registration of defined user with email and password only",
			"url": "https://reqres.in/api/register",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains expected properties id and token in the response": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties id and token in the response": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains expected properties id and token in the response": true
				}
			]
		},
		{
			"id": "66f61c3a-4c24-4e1a-9a88-96d8a7316d09",
			"name": "Registration with existing email and password",
			"url": "https://reqres.in/api/register",
			"time": 93,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code is not 200": false,
				"Error message is displayed- User already registered": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code is not 200": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- User already registered": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code is not 200": false,
					"Error message is displayed- User already registered": false
				}
			]
		},
		{
			"id": "582f4d6b-9335-404e-a999-50e91c06ed9a",
			"name": "Registration with empty email and empty password",
			"url": "https://reqres.in/api/register",
			"time": 95,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Missing email or username": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing email or username": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Missing email or username": true
				}
			]
		},
		{
			"id": "6cae3e03-bae8-4080-8071-7493b5016d4d",
			"name": "Registration with empty email and valid password",
			"url": "https://reqres.in/api/register",
			"time": 93,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Missing email or username": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing email or username": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Missing email or username": true
				}
			]
		},
		{
			"id": "9a998ca2-582f-498c-aa44-d8a9c1153fe6",
			"name": "Registration with valid email and empty password",
			"url": "https://reqres.in/api/register",
			"time": 93,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Missing password": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing password": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Missing password": true
				}
			]
		},
		{
			"id": "118bdc42-33f7-4a48-a3a1-adc76d7da074",
			"name": "Registration of defined user with email only",
			"url": "https://reqres.in/api/register",
			"time": 109,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Missing password": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing password": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				109
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Missing password": true
				}
			]
		},
		{
			"id": "7a8159b9-9112-45fe-9462-4c405642abef",
			"name": "Registration of defined user with invalid email only",
			"url": "https://reqres.in/api/register",
			"time": 97,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Missing password": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing password": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Missing password": true
				}
			]
		},
		{
			"id": "47e7aa3f-d764-419a-b14a-5069dc7a4811",
			"name": "Registration of defined user with password only",
			"url": "https://reqres.in/api/register",
			"time": 101,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Missing email or username": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing email or username": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Missing email or username": true
				}
			]
		},
		{
			"id": "2746fcb3-71dd-4360-898b-67975e1bd31b",
			"name": "Registration of defined user with long password",
			"url": "https://reqres.in/api/register",
			"time": 91,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates failed registration": false,
				"Error message is displayed- Invalid Password": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates failed registration": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Invalid Password": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				91
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates failed registration": false,
					"Error message is displayed- Invalid Password": false
				}
			]
		},
		{
			"id": "40538951-0bea-4208-ba7d-86da6fccf964",
			"name": "Registration of defined user with long email",
			"url": "https://reqres.in/api/register",
			"time": 94,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Invalid Email": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Invalid Email": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Invalid Email": false
				}
			]
		},
		{
			"id": "d50bf170-2332-4b7b-ab59-00a2ec1833e7",
			"name": "Registration of defined user with invalid email and password",
			"url": "https://reqres.in/api/register",
			"time": 96,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Invalid email": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Invalid email": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Invalid email": false
				}
			]
		},
		{
			"id": "44cf5726-6aa0-4398-9857-8afc52b1dc0f",
			"name": "Registration of defined user with valid email and invalid password",
			"url": "https://reqres.in/api/register",
			"time": 92,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates failed registration": false,
				"Error message is displayed- Invalid password": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates failed registration": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Invalid password": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				92
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates failed registration": false,
					"Error message is displayed- Invalid password": false
				}
			]
		},
		{
			"id": "8ab88c65-b3b7-46d3-a4f6-dad3108ea7a3",
			"name": "Registration with Invalid Request Body Media Type",
			"url": "https://reqres.in/api/register",
			"time": 96,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"response phrase should be: Bad Request": true,
				"Error message is displayed- Invalid Media Type, Only Json is": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"response phrase should be: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Invalid Media Type, Only Json is": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"response phrase should be: Bad Request": true,
					"Error message is displayed- Invalid Media Type, Only Json is": false
				}
			]
		},
		{
			"id": "77bbec75-2f16-436c-bd3e-8f164894b182",
			"name": "Registration with wrong method (GET) but correct url",
			"url": "https://reqres.in/api/register",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates error in request method": false,
				"For invalid method, response should be: Method Not Allowed": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates error in request method": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response should be: Method Not Allowed": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates error in request method": false,
					"For invalid method, response should be: Method Not Allowed": false
				}
			]
		},
		{
			"id": "1e6b2794-835e-4e75-a1f3-bafdbe3e5ade",
			"name": "Incorrect HTTP Method (PUT) and URL for Registration",
			"url": "https://reqres.in/api/register/1",
			"time": 96,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates error in request method": false,
				"For incorrect method and url, response should be: Not Found": false,
				"Error message is displayed- Requested resource is not available": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates error in request method": {
					"pass": 0,
					"fail": 1
				},
				"For incorrect method and url, response should be: Not Found": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Requested resource is not available": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				96
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates error in request method": false,
					"For incorrect method and url, response should be: Not Found": false,
					"Error message is displayed- Requested resource is not available": false
				}
			]
		},
		{
			"id": "d50d8338-3d23-4033-b217-ab150e77e9a0",
			"name": "Register with unknown request body",
			"url": "https://reqres.in/api/register",
			"time": 99,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"response phrase should be: Bad Request": true,
				"Error message is displayed- Invalid request body": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"response phrase should be: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Invalid request body": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"response phrase should be: Bad Request": true,
					"Error message is displayed- Invalid request body": false
				}
			]
		},
		{
			"id": "061370f2-4f65-4926-b74f-89c0db4ce5ae",
			"name": "Login of defined user with all valid parameter(email and password)",
			"url": "https://reqres.in/api/login",
			"time": 102,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": true,
				"Response contains expected properties token in the response": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response contains expected properties token in the response": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": true,
					"Response contains expected properties token in the response": true
				}
			]
		},
		{
			"id": "c79b1921-85e2-4dc2-a970-6729dd907272",
			"name": "Login of defined user with all valid parameters: Verify case insensitivity of email address",
			"url": "https://reqres.in/api/login",
			"time": 100,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Status code is 200": false,
				"Response contains expected properties token in the response": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				},
				"Response contains expected properties token in the response": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				100
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Status code is 200": false,
					"Response contains expected properties token in the response": false
				}
			]
		},
		{
			"id": "4b4b4fc7-3d89-4c14-a450-c48b8a555848",
			"name": "Login of unregistered user",
			"url": "https://reqres.in/api/login",
			"time": 98,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"Response status should contain: Bad Request": false,
				"Error message is displayed- user not found": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"Response status should contain: Bad Request": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- user not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"Response status should contain: Bad Request": false,
					"Error message is displayed- user not found": true
				}
			]
		},
		{
			"id": "90d0c45b-8830-463b-baae-37d42f7d92d9",
			"name": "Login of registered user with correct email and incorrect password",
			"url": "https://reqres.in/api/login",
			"time": 99,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates failed login": false,
				"Response status should contain: Unauthorized": false,
				"Error message is displayed- Invalid username or password": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates failed login": {
					"pass": 0,
					"fail": 1
				},
				"Response status should contain: Unauthorized": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Invalid username or password": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates failed login": false,
					"Response status should contain: Unauthorized": false,
					"Error message is displayed- Invalid username or password": false
				}
			]
		},
		{
			"id": "74dbef20-4059-4590-aef0-84aa2ad55962",
			"name": "Login of registered user with correct email and empty password",
			"url": "https://reqres.in/api/login",
			"time": 92,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"Response status should contain: Bad Request": true,
				"Error message is displayed- Missing password": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"Response status should contain: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing password": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				92
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"Response status should contain: Bad Request": true,
					"Error message is displayed- Missing password": true
				}
			]
		},
		{
			"id": "9ffa7d35-6d9b-4f86-a4e8-095e99b27246",
			"name": "Login of defined user with all correct email and password: Verify case sensitivity of password",
			"url": "https://reqres.in/api/login",
			"time": 94,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates failed login": false,
				"Response status should contain: Unauthorized": false,
				"Error message is displayed- Invalid username or password": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates failed login": {
					"pass": 0,
					"fail": 1
				},
				"Response status should contain: Unauthorized": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Invalid username or password": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates failed login": false,
					"Response status should contain: Unauthorized": false,
					"Error message is displayed- Invalid username or password": false
				}
			]
		},
		{
			"id": "7f7fbe48-44a5-42f4-af9b-2f925e8cb7f8",
			"name": "Login with empty email and empty password",
			"url": "https://reqres.in/api/login",
			"time": 98,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"Response status should contain: Bad Request": true,
				"Error message is displayed- Missing email or username": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"Response status should contain: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing email or username": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"Response status should contain: Bad Request": true,
					"Error message is displayed- Missing email or username": true
				}
			]
		},
		{
			"id": "329d943a-5d8f-41e8-a995-f0f6475e9439",
			"name": "Login with empty email and valid password",
			"url": "https://reqres.in/api/login",
			"time": 97,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"Response status should contain: Bad Request": true,
				"Error message is displayed- Missing email or username": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"Response status should contain: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing email or username": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"Response status should contain: Bad Request": true,
					"Error message is displayed- Missing email or username": true
				}
			]
		},
		{
			"id": "4a6d02ca-8b0a-498a-a31d-30c2c960ec9f",
			"name": "Login of registered user with email only",
			"url": "https://reqres.in/api/login",
			"time": 101,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"Response status should contain: Bad Request": true,
				"Error message is displayed- Missing password": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"Response status should contain: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing password": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"Response status should contain: Bad Request": true,
					"Error message is displayed- Missing password": true
				}
			]
		},
		{
			"id": "18ae2dfb-6557-40b2-8105-b52dd9e52a46",
			"name": "Login of registered user with invalid email only",
			"url": "https://reqres.in/api/login",
			"time": 94,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"Response status should contain: Bad Request": true,
				"Error message is displayed- Invalid email": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"Response status should contain: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Invalid email": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				94
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"Response status should contain: Bad Request": true,
					"Error message is displayed- Invalid email": false
				}
			]
		},
		{
			"id": "3f9ea9f8-e7b8-4db1-97ec-65b39b5565bb",
			"name": "Login with password only",
			"url": "https://reqres.in/api/login",
			"time": 99,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed registration": true,
				"Error message is displayed- Missing email or username": true
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed registration": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Missing email or username": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed registration": true,
					"Error message is displayed- Missing email or username": true
				}
			]
		},
		{
			"id": "bea19fb6-82d2-4da6-8eb7-f632fa9dabbb",
			"name": "Login of registered user with long password",
			"url": "https://reqres.in/api/login",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates failed registration": false,
				"Error message is displayed- Invalid Password": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates failed registration": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Invalid Password": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates failed registration": false,
					"Error message is displayed- Invalid Password": false
				}
			]
		},
		{
			"id": "f434893f-f706-42db-92fa-ccdf3c299df2",
			"name": "Login of registered user with correct email and invalid password",
			"url": "https://reqres.in/api/login",
			"time": 97,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates failed login": false,
				"Error message is displayed- Invalid password": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates failed login": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Invalid password": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				97
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates failed login": false,
					"Error message is displayed- Invalid password": false
				}
			]
		},
		{
			"id": "d97c7750-9f7c-434d-8c20-802706a79fcf",
			"name": "Login with Invalid Request Body Media Type",
			"url": "https://reqres.in/api/login",
			"time": 93,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"response phrase should be: Bad Request": true,
				"Error message is displayed- Invalid Media Type, Only Json is": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"response phrase should be: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Invalid Media Type, Only Json is": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"response phrase should be: Bad Request": true,
					"Error message is displayed- Invalid Media Type, Only Json is": false
				}
			]
		},
		{
			"id": "ead0429e-a7c8-4d37-a762-d6a0eeddaa0a",
			"name": "Login with wrong method (GET) but correct url",
			"url": "https://reqres.in/api/login",
			"time": 93,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates error in request method": false,
				"For invalid method, response should be: Method Not Allowed": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates error in request method": {
					"pass": 0,
					"fail": 1
				},
				"For invalid method, response should be: Method Not Allowed": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				93
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates error in request method": false,
					"For invalid method, response should be: Method Not Allowed": false
				}
			]
		},
		{
			"id": "f922579d-dcef-4c8c-8538-d78a32dcf6b3",
			"name": "Incorrect HTTP Method (PUT) and URL for Login",
			"url": "https://reqres.in/api/login/1",
			"time": 95,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": false,
				"Status code indicates error in request method": false,
				"For incorrect method and url, response should be: Not Found": false,
				"Error message is displayed- Requested resource is not available": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 0,
					"fail": 1
				},
				"Status code indicates error in request method": {
					"pass": 0,
					"fail": 1
				},
				"For incorrect method and url, response should be: Not Found": {
					"pass": 0,
					"fail": 1
				},
				"Error message is displayed- Requested resource is not available": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				95
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": false,
					"Status code indicates error in request method": false,
					"For incorrect method and url, response should be: Not Found": false,
					"Error message is displayed- Requested resource is not available": false
				}
			]
		},
		{
			"id": "e87ac189-431e-4b90-b64b-3bd7096aced3",
			"name": "Login with unknown request body",
			"url": "https://reqres.in/api/login",
			"time": 92,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Response is a JSON object": true,
				"Response body is not empty": true,
				"Response body contains expected error key and error msg as value": true,
				"Status code indicates failed login": true,
				"response phrase should be: Bad Request": true,
				"Error message is displayed- Invalid request body": false
			},
			"testPassFailCounts": {
				"Response is a JSON object": {
					"pass": 1,
					"fail": 0
				},
				"Response body is not empty": {
					"pass": 1,
					"fail": 0
				},
				"Response body contains expected error key and error msg as value": {
					"pass": 1,
					"fail": 0
				},
				"Status code indicates failed login": {
					"pass": 1,
					"fail": 0
				},
				"response phrase should be: Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"Error message is displayed- Invalid request body": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				92
			],
			"allTests": [
				{
					"Response is a JSON object": true,
					"Response body is not empty": true,
					"Response body contains expected error key and error msg as value": true,
					"Status code indicates failed login": true,
					"response phrase should be: Bad Request": true,
					"Error message is displayed- Invalid request body": false
				}
			]
		}
	],
	"count": 1,
	"totalTime": 17468,
	"collection": {
		"requests": [
			{
				"id": "cc5742ef-0f63-436d-9947-ab99001bf6f8",
				"method": "GET"
			},
			{
				"id": "c9c5f13d-6697-41cc-9bed-dc66cc466db4",
				"method": "GET"
			},
			{
				"id": "99f58ac2-607b-4403-907d-61da3242a86f",
				"method": "GET"
			},
			{
				"id": "07c242d9-0e72-49cd-9085-e5b0ca7692b2",
				"method": "GET"
			},
			{
				"id": "23893d12-c994-4ab9-852b-18d4f53dca8b",
				"method": "GET"
			},
			{
				"id": "76029224-17dd-4881-b511-1bdcd8536b53",
				"method": "GET"
			},
			{
				"id": "a7f4f4c5-e1c7-4467-a8c8-d2bb87dfd7d6",
				"method": "GET"
			},
			{
				"id": "4a745aa2-f8bc-4f34-911f-bd4f97bf599a",
				"method": "GET"
			},
			{
				"id": "123d0a58-c111-468b-8d12-807ddaf71cf8",
				"method": "GET"
			},
			{
				"id": "a25065f5-cd33-42f1-802b-45c326b64277",
				"method": "GET"
			},
			{
				"id": "caa0de85-a46a-49b8-9ae8-ba2520772417",
				"method": "GET"
			},
			{
				"id": "649fc44c-97e1-4c9d-b471-194186065971",
				"method": "GET"
			},
			{
				"id": "b2e7b9bc-fa0b-4af2-a67a-a267796f97b9",
				"method": "GET"
			},
			{
				"id": "fb9a060d-debc-4cbd-8425-639d8a88931e",
				"method": "GET"
			},
			{
				"id": "28907bd9-d1a5-4cb7-a176-27ec1bd536b6",
				"method": "GET"
			},
			{
				"id": "f76f8bbe-4036-4c8c-b263-15f92d49717b",
				"method": "GET"
			},
			{
				"id": "7a95e409-a3fb-43ed-b2b5-2ee946780426",
				"method": "GET"
			},
			{
				"id": "40d4c687-ab2d-410d-8bcc-3862f65905c4",
				"method": "POST"
			},
			{
				"id": "e8d5f93b-5fb4-4be0-b3b7-34094397dd85",
				"method": "GET"
			},
			{
				"id": "8b1de41e-1026-431f-b499-b96cf76cd8fe",
				"method": "GET"
			},
			{
				"id": "8a67b042-d94f-40fd-b92f-ff5e84775d64",
				"method": "GET"
			},
			{
				"id": "9d8b4a62-ceda-4b92-93b5-c84d78b33928",
				"method": "GET"
			},
			{
				"id": "3812bf3c-070b-4023-b361-fd0d796b7e25",
				"method": "GET"
			},
			{
				"id": "ed0bfffe-e664-4e5a-b7ca-29e0967f8fd5",
				"method": "GET"
			},
			{
				"id": "8581db14-2bde-4ad4-961e-359635722e77",
				"method": "GET"
			},
			{
				"id": "a0dc7920-665c-44a2-960b-a717d527d3a2",
				"method": "POST"
			},
			{
				"id": "f186c0a9-7e03-4c3f-8c6b-4e24f0b84d8a",
				"method": "GET"
			},
			{
				"id": "f0ced61a-65de-4f94-b86c-af52d78e6f7a",
				"method": "POST"
			},
			{
				"id": "a19c49d1-e7b4-4255-aa6a-95fec3120a74",
				"method": "POST"
			},
			{
				"id": "f6425523-cef5-4db2-8b60-b7562edb4109",
				"method": "POST"
			},
			{
				"id": "e147b5e1-961f-4117-81ba-47893e5b23ac",
				"method": "POST"
			},
			{
				"id": "64a0e555-cfc6-46dd-88b2-1bb97a4ec57e",
				"method": "POST"
			},
			{
				"id": "6feefd59-3a82-4efe-bbd8-457f2311bcc6",
				"method": "POST"
			},
			{
				"id": "c0781630-6fdc-494a-b1cf-f5bec1add6c2",
				"method": "POST"
			},
			{
				"id": "9449d617-5a63-45be-b3a0-bde1dc23de19",
				"method": "POST"
			},
			{
				"id": "a6fbd308-f86b-481a-8c9b-5d32df5bfcc0",
				"method": "POST"
			},
			{
				"id": "7225e42d-ebd1-4635-96d9-e0926d30da55",
				"method": "POST"
			},
			{
				"id": "722812f5-1969-446d-ada9-97b5ecb42df4",
				"method": "POST"
			},
			{
				"id": "03ceb3c1-99c9-4b36-8dab-002459d0187e",
				"method": "POST"
			},
			{
				"id": "8abc4193-37b9-4f61-8cce-487263eea56c",
				"method": "POST"
			},
			{
				"id": "90e3f319-1f81-4e9a-8c96-a01e0641ec86",
				"method": "POST"
			},
			{
				"id": "4dd938af-80df-4a62-9788-8c5ed97ebb37",
				"method": "POST"
			},
			{
				"id": "d81e5b78-21f7-4a45-8f1d-4eee6f172f32",
				"method": "POST"
			},
			{
				"id": "749faec2-9db6-4f2a-b1e9-e106a253ff7b",
				"method": "POST"
			},
			{
				"id": "e8e1ecb9-5871-4ddb-93c1-815719b11702",
				"method": "POST"
			},
			{
				"id": "f95b0643-295e-4dd2-94c0-3fe2ffc02773",
				"method": "POST"
			},
			{
				"id": "5fdd3a1d-e2ce-498c-a7fd-63f0aa557e1e",
				"method": "POST"
			},
			{
				"id": "ee94f95e-d8cb-41ef-8b9e-a36c747bebdb",
				"method": "POST"
			},
			{
				"id": "41df7152-14dc-4500-b74e-e5ae68c8030f",
				"method": "POST"
			},
			{
				"id": "6e72a159-9e50-4ba3-b0d9-3eca1cfccc54",
				"method": "PUT"
			},
			{
				"id": "a3626f76-b09d-4ce4-986d-a2bc6855f838",
				"method": "PUT"
			},
			{
				"id": "9e1273d1-83e9-4c63-befd-ff8fd50c3168",
				"method": "PUT"
			},
			{
				"id": "6aa6c1a9-37a7-498a-aa22-343558212ba7",
				"method": "PUT"
			},
			{
				"id": "8a503167-00f2-4369-b6a7-5e59eb208100",
				"method": "PATCH"
			},
			{
				"id": "2c990560-082a-49bf-a2c3-d3180cc12282",
				"method": "PATCH"
			},
			{
				"id": "8d6f10d4-7e87-4d64-a9a5-939256d82cc6",
				"method": "PATCH"
			},
			{
				"id": "d16fc4ac-199d-4b99-9380-ee9d02a2474a",
				"method": "PATCH"
			},
			{
				"id": "9fd66963-d017-4b33-b585-7fc406bb093c",
				"method": "PUT"
			},
			{
				"id": "75313485-c181-4186-b915-8902131d1ae8",
				"method": "PUT"
			},
			{
				"id": "492ee08a-cf2f-4a55-9671-db87d939e344",
				"method": "PUT"
			},
			{
				"id": "65d74877-9f97-4b44-ba80-ff5599cd95bc",
				"method": "PATCH"
			},
			{
				"id": "e030dd01-c82c-471f-b788-dcb7cecaa598",
				"method": "PUT"
			},
			{
				"id": "60e2c136-4814-4642-b3fb-ce69f77e8754",
				"method": "PUT"
			},
			{
				"id": "5a4eff6e-e263-4d0e-bb16-0e3def24f11b",
				"method": "PUT"
			},
			{
				"id": "cdb8f644-9728-4564-af79-730167647281",
				"method": "PUT"
			},
			{
				"id": "62b13af8-1761-40f1-8e81-71356926b283",
				"method": "PUT"
			},
			{
				"id": "caf9a1af-1de5-4b82-8ed6-b12095c7da0e",
				"method": "PUT"
			},
			{
				"id": "82ae9c67-6f12-4ba9-83db-b446f9aebb69",
				"method": "PUT"
			},
			{
				"id": "38361f7e-ed1a-45bc-afff-5c21e5f28f11",
				"method": "PUT"
			},
			{
				"id": "05dee392-4bb4-4642-ab63-e4e538a5c9a7",
				"method": "PUT"
			},
			{
				"id": "37f47746-6e18-4a6d-b42a-64d51dd0ee71",
				"method": "DELETE"
			},
			{
				"id": "781891f0-e5bd-449b-9eea-79a330613b48",
				"method": "GET"
			},
			{
				"id": "7375b137-35ed-43a8-b956-97cb43b55cb9",
				"method": "DELETE"
			},
			{
				"id": "f8090954-e89c-4618-b40a-1bc44d48825d",
				"method": "GET"
			},
			{
				"id": "b13a3906-5ebb-4c86-b83f-ede33d438b4c",
				"method": "GET"
			},
			{
				"id": "d0935f8b-af72-4c09-8ffd-3dfa918fa13c",
				"method": "GET"
			},
			{
				"id": "006f4fa1-9854-4698-a798-3b8f63ad3181",
				"method": "GET"
			},
			{
				"id": "304a2873-434c-49fa-8fa5-4a304ae0e1d6",
				"method": "POST"
			},
			{
				"id": "87b08e4d-75c2-4b57-9649-18fd4e942f20",
				"method": "GET"
			},
			{
				"id": "6f50ee15-bfd9-4cff-8a9e-3250f99d7ca1",
				"method": "GET"
			},
			{
				"id": "535860ad-5658-4641-993c-3ff8082c8133",
				"method": "GET"
			},
			{
				"id": "4a490171-b131-42ba-aaf6-e047247beeba",
				"method": "GET"
			},
			{
				"id": "29ea9237-4251-4a67-9a9f-5b264aea4d7c",
				"method": "GET"
			},
			{
				"id": "e997e1f6-3aa2-4a5b-a5a0-1f2bc177474e",
				"method": "GET"
			},
			{
				"id": "1758b3b5-df3b-4a65-a3d6-87b4d2c6906f",
				"method": "GET"
			},
			{
				"id": "9ac2f29d-0bd1-4845-afb2-19007ab2cd2d",
				"method": "GET"
			},
			{
				"id": "06fee1cb-ee6b-4229-b627-2322e68bc43f",
				"method": "GET"
			},
			{
				"id": "4b5670cf-6bd7-4f0a-9671-89c9c8ce831c",
				"method": "GET"
			},
			{
				"id": "7f14e5f7-3b04-4635-b66b-356d1a6c8436",
				"method": "GET"
			},
			{
				"id": "9ed6a035-6fa2-472b-8e8b-88f474ad0ece",
				"method": "GET"
			},
			{
				"id": "f9b20627-d438-4997-9f78-6f6877447482",
				"method": "GET"
			},
			{
				"id": "92932196-cd8a-40a7-9e9c-5ce78b2a74cf",
				"method": "GET"
			},
			{
				"id": "562ea186-9058-4f1e-b987-22bb3fc97818",
				"method": "POST"
			},
			{
				"id": "80cc0185-e032-4587-b863-aed24172c42b",
				"method": "PUT"
			},
			{
				"id": "ed8e11d6-5799-40e4-ac5e-95bf52965c40",
				"method": "PATCH"
			},
			{
				"id": "46605222-9bbd-4b75-b02e-0fd5092db792",
				"method": "POST"
			},
			{
				"id": "9efbc96c-df8f-4986-b661-14faee7b2c7d",
				"method": "POST"
			},
			{
				"id": "a97d2a48-fc00-4e5e-bc94-af833cf2857c",
				"method": "POST"
			},
			{
				"id": "3c572482-431e-41f1-a2f7-f777824d4a19",
				"method": "POST"
			},
			{
				"id": "eadb04c2-ed5c-4199-a05c-ffdb5511b0d2",
				"method": "POST"
			},
			{
				"id": "ac0e05a0-fa47-4398-98f0-d10c81c11b71",
				"method": "POST"
			},
			{
				"id": "582a884d-0314-40bb-ae50-43c47588b0d0",
				"method": "POST"
			},
			{
				"id": "2f45e37c-5bbe-40ce-b5c6-20d9a886bf7a",
				"method": "POST"
			},
			{
				"id": "388fdf50-44d1-40f7-82f8-a95c9788994f",
				"method": "POST"
			},
			{
				"id": "79cb3946-2f8a-4213-b812-df869bb6e62e",
				"method": "POST"
			},
			{
				"id": "ff5457cd-31ef-4cec-bf22-791b45c395ad",
				"method": "POST"
			},
			{
				"id": "e5ae73f0-e18e-450b-b479-b6262e04356a",
				"method": "POST"
			},
			{
				"id": "832e2cbd-282b-4f7c-8ae8-a147066e5091",
				"method": "POST"
			},
			{
				"id": "5d1d7bb6-ad21-4da2-bcf8-a040583b78c5",
				"method": "POST"
			},
			{
				"id": "7b83a4d4-6a65-4ac4-ba91-3afdb14acf41",
				"method": "POST"
			},
			{
				"id": "66e1fe7c-3c84-4675-ab8a-b053fb731305",
				"method": "POST"
			},
			{
				"id": "0354999d-cf64-4150-9d69-af5636866388",
				"method": "POST"
			},
			{
				"id": "465ae8fc-0f4a-47ce-be32-7d73d47d1358",
				"method": "POST"
			},
			{
				"id": "db3e17da-a0c7-4f94-9aec-b25b13daa0ae",
				"method": "POST"
			},
			{
				"id": "52d3c337-4a34-413e-9cd8-d4833cc88e26",
				"method": "POST"
			},
			{
				"id": "f37474b5-f42c-4f5f-945e-08e02cda49fb",
				"method": "POST"
			},
			{
				"id": "6a2b4406-89b9-4c31-9381-22ca8bed1249",
				"method": "POST"
			},
			{
				"id": "fa69acc5-1e2f-44e1-8a10-615da366c41c",
				"method": "POST"
			},
			{
				"id": "a617bafe-d406-4f32-9fd7-f46338f7486b",
				"method": "PUT"
			},
			{
				"id": "bb86300f-40f4-4fab-8f16-e36a09218577",
				"method": "PUT"
			},
			{
				"id": "323c9857-6711-4d6e-adc6-4aff9c561d8e",
				"method": "PUT"
			},
			{
				"id": "9077b4e9-69c4-45b7-bd2c-c3e2525c67b1",
				"method": "PUT"
			},
			{
				"id": "b63764e0-f14d-46f6-af59-3002fff81d6b",
				"method": "PUT"
			},
			{
				"id": "56fc50f0-b86e-4544-abbe-02e2f8f6f5eb",
				"method": "PATCH"
			},
			{
				"id": "3a9b2e3f-1837-481a-b635-4d1ddb630462",
				"method": "PATCH"
			},
			{
				"id": "2ef148e6-4f61-47d5-ada0-96692d975eb6",
				"method": "PATCH"
			},
			{
				"id": "e75eed0b-b670-4978-8fb5-33ad83620378",
				"method": "PATCH"
			},
			{
				"id": "c3246507-d6a5-44a8-b42b-d98be661d3e0",
				"method": "PUT"
			},
			{
				"id": "22add796-d49c-42d5-a7e0-68d7b9f32734",
				"method": "PUT"
			},
			{
				"id": "d209cf84-d34a-4eb3-a305-de9e90ecd358",
				"method": "PUT"
			},
			{
				"id": "b2431a57-24a4-411f-84d5-02a8dd73e094",
				"method": "PATCH"
			},
			{
				"id": "11c6f460-1432-42ea-b46e-1e96a64e8834",
				"method": "PUT"
			},
			{
				"id": "8eaf0465-5c4f-48a9-a40d-04ffa4ed6cf4",
				"method": "PUT"
			},
			{
				"id": "adafa373-b483-4aed-9c64-af1f42e66322",
				"method": "PUT"
			},
			{
				"id": "9ff5f4c6-d5dc-4991-8e0a-fc2f1a55fa6a",
				"method": "PUT"
			},
			{
				"id": "5e06e686-4802-4b3c-a6c9-f6260b25b793",
				"method": "PUT"
			},
			{
				"id": "dcd3bf0d-8977-4bf3-8fdc-5eb50807cc42",
				"method": "PUT"
			},
			{
				"id": "0418cde8-f5a9-4823-bc16-0267ec60fb5d",
				"method": "PUT"
			},
			{
				"id": "a92e16dd-fd38-4cdb-ab2d-dd5aff0734d0",
				"method": "PUT"
			},
			{
				"id": "99483d95-9abf-4f0d-b75e-9e375bf6c040",
				"method": "PUT"
			},
			{
				"id": "1b9d2307-4fa0-4bc0-9117-77418932abdc",
				"method": "DELETE"
			},
			{
				"id": "48ccf629-5d36-4706-9406-78a3db8bdb18",
				"method": "GET"
			},
			{
				"id": "36c8902f-929d-4032-affc-d56a3e39e289",
				"method": "DELETE"
			},
			{
				"id": "3e524f9e-32b1-4d65-8dd5-1207896d70a1",
				"method": "POST"
			},
			{
				"id": "42e9939b-9b3e-4f6a-92e5-8bf506a4d6f4",
				"method": "POST"
			},
			{
				"id": "035c8ce6-3d79-49f7-89cb-c6211e428b42",
				"method": "POST"
			},
			{
				"id": "66f61c3a-4c24-4e1a-9a88-96d8a7316d09",
				"method": "POST"
			},
			{
				"id": "582f4d6b-9335-404e-a999-50e91c06ed9a",
				"method": "POST"
			},
			{
				"id": "6cae3e03-bae8-4080-8071-7493b5016d4d",
				"method": "POST"
			},
			{
				"id": "9a998ca2-582f-498c-aa44-d8a9c1153fe6",
				"method": "POST"
			},
			{
				"id": "118bdc42-33f7-4a48-a3a1-adc76d7da074",
				"method": "POST"
			},
			{
				"id": "7a8159b9-9112-45fe-9462-4c405642abef",
				"method": "POST"
			},
			{
				"id": "47e7aa3f-d764-419a-b14a-5069dc7a4811",
				"method": "POST"
			},
			{
				"id": "2746fcb3-71dd-4360-898b-67975e1bd31b",
				"method": "POST"
			},
			{
				"id": "40538951-0bea-4208-ba7d-86da6fccf964",
				"method": "POST"
			},
			{
				"id": "d50bf170-2332-4b7b-ab59-00a2ec1833e7",
				"method": "POST"
			},
			{
				"id": "44cf5726-6aa0-4398-9857-8afc52b1dc0f",
				"method": "POST"
			},
			{
				"id": "8ab88c65-b3b7-46d3-a4f6-dad3108ea7a3",
				"method": "POST"
			},
			{
				"id": "77bbec75-2f16-436c-bd3e-8f164894b182",
				"method": "GET"
			},
			{
				"id": "1e6b2794-835e-4e75-a1f3-bafdbe3e5ade",
				"method": "PUT"
			},
			{
				"id": "d50d8338-3d23-4033-b217-ab150e77e9a0",
				"method": "POST"
			},
			{
				"id": "061370f2-4f65-4926-b74f-89c0db4ce5ae",
				"method": "POST"
			},
			{
				"id": "c79b1921-85e2-4dc2-a970-6729dd907272",
				"method": "POST"
			},
			{
				"id": "4b4b4fc7-3d89-4c14-a450-c48b8a555848",
				"method": "POST"
			},
			{
				"id": "90d0c45b-8830-463b-baae-37d42f7d92d9",
				"method": "POST"
			},
			{
				"id": "74dbef20-4059-4590-aef0-84aa2ad55962",
				"method": "POST"
			},
			{
				"id": "9ffa7d35-6d9b-4f86-a4e8-095e99b27246",
				"method": "POST"
			},
			{
				"id": "7f7fbe48-44a5-42f4-af9b-2f925e8cb7f8",
				"method": "POST"
			},
			{
				"id": "329d943a-5d8f-41e8-a995-f0f6475e9439",
				"method": "POST"
			},
			{
				"id": "4a6d02ca-8b0a-498a-a31d-30c2c960ec9f",
				"method": "POST"
			},
			{
				"id": "18ae2dfb-6557-40b2-8105-b52dd9e52a46",
				"method": "POST"
			},
			{
				"id": "3f9ea9f8-e7b8-4db1-97ec-65b39b5565bb",
				"method": "POST"
			},
			{
				"id": "bea19fb6-82d2-4da6-8eb7-f632fa9dabbb",
				"method": "POST"
			},
			{
				"id": "f434893f-f706-42db-92fa-ccdf3c299df2",
				"method": "POST"
			},
			{
				"id": "d97c7750-9f7c-434d-8c20-802706a79fcf",
				"method": "POST"
			},
			{
				"id": "ead0429e-a7c8-4d37-a762-d6a0eeddaa0a",
				"method": "GET"
			},
			{
				"id": "f922579d-dcef-4c8c-8538-d78a32dcf6b3",
				"method": "PUT"
			},
			{
				"id": "e87ac189-431e-4b90-b64b-3bd7096aced3",
				"method": "POST"
			}
		]
	}
}